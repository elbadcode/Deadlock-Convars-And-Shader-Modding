//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xyzw        1     NONE   float   xy  
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xy w
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      0x00000000: ps_5_0
      0x00000008: dcl_globalFlags refactoringAllowed
      0x0000000C: dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { 0.640736, -0.355205, 0, 0},
                              { -0.725411, -0.688316, 0, 0},
                              { -0.185095, 0.722648, 0, 0},
                              { 0.770596, 0.637324, 0, 0},
                              { -0.921445, 0.196997, 0, 0},
                              { 0.076571, -0.988220, 0, 0},
                              { -0.134800, -0.090854, 0, 0},
                              { 0.320109, 0.257241, 0, 0},
                              { 0.994021, 0.109193, 0, 0},
                              { 0.304934, 0.952374, 0, 0},
                              { -0.698577, 0.715535, 0, 0},
                              { 0.548701, -0.836019, 0, 0},
                              { -0.443159, 0.296121, 0, 0},
                              { 0.150670, -0.489731, 0, 0},
                              { -0.623829, -0.208167, 0, 0},
                              { -0.294778, -0.596545, 0, 0},
                              { 0.334086, -0.128208, 0, 0},
                              { -0.061983, 0.311747, 0, 0},
                              { 0.166112, 0.616260, 0, 0},
                              { -0.289127, -0.957291, 0, 0},
                              { -0.987480, -0.157745, 0, 0},
                              { 0.637501, 0.065157, 0, 0},
                              { 0.971376, -0.237545, 0, 0},
                              { -0.017060, 0.980590, 0, 0},
                              { -0.442564, 0.896737, 0, 0},
                              { 0.486190, 0.518723, 0, 0},
                              { -0.725272, 0.419965, 0, 0},
                              { 0.781417, -0.624009, 0, 0},
                              { -0.899227, -0.437482, 0, 0},
                              { 0.769219, 0.333720, 0, 0},
                              { -0.414411, 0.003754, 0, 0},
                              { 0.262856, -0.759514, 0, 0} }
      0x00000254: dcl_constantbuffer CB0[36], immediateIndexed
      0x00000264: dcl_constantbuffer CB1[27], immediateIndexed
      0x00000274: dcl_constantbuffer CB3[2018], dynamicIndexed
      0x00000284: dcl_constantbuffer CB4[33], immediateIndexed
      0x00000294: dcl_constantbuffer CB2[4050], dynamicIndexed
      0x000002A4: dcl_sampler s0, mode_default
      0x000002B0: dcl_sampler s1, mode_default
      0x000002BC: dcl_sampler s2, mode_default
      0x000002C8: dcl_sampler s3, mode_default
      0x000002D4: dcl_sampler s4, mode_default
      0x000002E0: dcl_sampler s5, mode_default
      0x000002EC: dcl_sampler s6, mode_default
      0x000002F8: dcl_resource_structured t0, 4
      0x00000308: dcl_resource_texture2d (float,float,float,float) t1
      0x00000318: dcl_resource_texture3d (float,float,float,float) t2
      0x00000328: dcl_resource_texture2darray (float,float,float,float) t3
      0x00000338: dcl_resource_texture2d (float,float,float,float) t4
      0x00000348: dcl_resource_texture2d (uint,uint,uint,uint) t5
      0x00000358: dcl_resource_texture2darray (float,float,float,float) t6
      0x00000368: dcl_resource_texture2d (float,float,float,float) t7
      0x00000378: dcl_resource_texture2d (float,float,float,float) t8
      0x00000388: dcl_resource_structured t9, 416
      0x00000398: dcl_resource_texture3d (float,float,float,float) t10
      0x000003A8: dcl_resource_texture3d (float,float,float,float) t11
      0x000003B8: dcl_resource_texturecubearray (float,float,float,float) t12
      0x000003C8: dcl_resource_texturecube (float,float,float,float) t13
      0x000003D8: dcl_resource_texture3d (float,float,float,float) t14
      0x000003E8: dcl_resource_texture2d (float,float,float,float) t15
      0x000003F8: dcl_resource_texture2d (float,float,float,float) t16
      0x00000408: dcl_resource_texture2d (float,float,float,float) t17
      0x00000418: dcl_resource_texture2d (float,float,float,float) t18
      0x00000428: dcl_resource_texture2d (float,float,float,float) t19
      0x00000438: dcl_input_ps linear v0.xyz
      0x00000444: dcl_input_ps linear v1.xy
      0x00000450: dcl_input_ps linear v2.xyzw
      0x0000045C: dcl_input_ps linear v3.xyz
      0x00000468: dcl_input_ps linear v4.xyzw
      0x00000474: dcl_input_ps_siv linear noperspective v5.xyw, position
      0x00000484: dcl_input_ps_sgv constant v6.x, is_front_face
      0x00000494: dcl_output o0.xyzw
      0x000004A0: dcl_temps 35
   0  0x000004A8: not r0.x, v6.x
   1  0x000004BC: ieq r0.y, cb0[6].z, l(0)
   2  0x000004DC: and r0.x, r0.y, r0.x
   3  0x000004F8: lt r0.y, l(0.000000), v4.w
   4  0x00000514: movc r0.y, r0.y, l(1.000000), l(-1.000000)
   5  0x00000538: mul r1.xyz, v0.zxyz, v4.yzxy
   6  0x00000554: mad r1.xyz, v0.yzxy, v4.zxyz, -r1.xyzx
   7  0x0000057C: mul r0.yzw, r0.yyyy, r1.xxyz
   8  0x00000598: dp3 r1.x, v0.xyzx, v0.xyzx
   9  0x000005B4: sqrt r1.x, r1.x
  10  0x000005C8: div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
  11  0x000005F0: mul r1.yzw, r1.xxxx, v0.xxyz
  12  0x0000060C: mul r2.xyz, r1.xxxx, v4.xyzx
  13  0x00000628: mul r0.yzw, r0.yyzw, r1.xxxx
  14  0x00000644: movc r1.xyz, r0.xxxx, -r1.yzwy, r1.yzwy
  15  0x0000066C: mul r3.xy, cb0[30].xyxx, cb1[21].wwww
  16  0x00000690: frc r3.xy, r3.xyxx
  17  0x000006A4: add r3.xy, r3.xyxx, v1.xyxx
  18  0x000006C0: sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t17.zxyw, s0
  19  0x000006EC: add r0.x, r3.z, r3.y
  20  0x00000708: add r4.x, r0.x, l(-1.003922)
  21  0x00000724: add r4.y, -r3.z, r3.y
  22  0x00000744: add r0.x, -|r4.x|, l(1.000000)
  23  0x00000764: add r4.z, -|r4.y|, r0.x
  24  0x00000784: dp3 r0.x, r4.xyzx, r4.xyzx
  25  0x000007A0: rsq r0.x, r0.x
  26  0x000007B4: mul r4.xyz, r0.xxxx, r4.xyzx
  27  0x000007D0: max r0.x, |r4.y|, |r4.x|
  28  0x000007F4: mul r0.x, r0.x, l(0.007813)
  29  0x00000810: max r0.x, r0.x, |r4.z|
  30  0x00000830: mov r4.w, -r4.y
  31  0x00000848: div r3.zw, -r4.xxxw, r0.xxxx
  32  0x00000868: mul r0.xyz, r0.yzwy, r3.wwww
  33  0x00000884: mad r0.xyz, r3.zzzz, r2.xyzx, r0.xyzx
  34  0x000008A8: add r0.xyz, -r0.xyzx, r1.xyzx
  35  0x000008C8: dp3 r0.w, r0.xyzx, r0.xyzx
  36  0x000008E4: rsq r0.w, r0.w
  37  0x000008F8: mul r2.xyz, r0.wwww, r0.xyzx
  38  0x00000914: mul r3.zw, cb0[20].xxxy, cb1[21].wwww
  39  0x00000938: frc r3.zw, r3.zzzw
  40  0x0000094C: add r3.zw, r3.zzzw, v1.xxxy
  41  0x00000968: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.zwzz, t16.yzwx, s0
  42  0x00000994: sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r3.zwzz, t15.xyzw, s0
  43  0x000009C0: mul r5.xyz, r4.yyyy, cb0[26].xyzx
  44  0x000009E0: mad r5.xyz, cb0[25].xyzx, r4.xxxx, r5.xyzx
  45  0x00000A08: mad r4.xyz, cb0[27].xyzx, r4.zzzz, r5.xyzx
  46  0x00000A30: add r4.xyz, r4.xyzx, cb0[28].xyzx
  47  0x00000A50: mul r5.xyz, r4.yyyy, cb0[22].xyzx
  48  0x00000A70: mad r5.xyz, cb0[21].xyzx, r4.xxxx, r5.xyzx
  49  0x00000A98: mad r5.xyz, cb0[23].xyzx, r4.zzzz, r5.xyzx
  50  0x00000AC0: add r5.xyz, r5.xyzx, cb0[24].xyzx
  51  0x00000AE0: movc r3.zw, cb0[18].xxxy, r1.wwww, l(0,0,1.000000,1.000000)
  52  0x00000B14: add r5.xyz, -r4.xyzx, r5.xyzx
  53  0x00000B34: mad r4.xyz, r3.zzzz, r5.xyzx, r4.xyzx
  54  0x00000B58: mul r1.w, r3.w, cb0[18].z
  55  0x00000B78: mad r5.xyz, r4.xyzx, v3.xyzx, -r4.xyzx
  56  0x00000BA0: mad r4.xyz, r1.wwww, r5.xyzx, r4.xyzx
  57  0x00000BC4: if_nz cb0[10].z
  58  0x00000BD4:   mul r3.zw, cb0[32].xxxy, cb1[21].wwww
  59  0x00000BF8:   frc r3.zw, r3.zzzw
  60  0x00000C0C:   add r3.zw, r3.zzzw, v1.xxxy
  61  0x00000C28:   mad r5.xyz, cb0[9].xyzx, r4.xyzx, -cb0[9].xyzx
  62  0x00000C58:   mad r5.xyz, cb0[10].xxxx, r5.xyzx, cb0[9].xyzx
  63  0x00000C84:   sample_indexable(texture2d)(float,float,float,float) r3.z, r3.zwzz, t19.zwxy, s2
  64  0x00000CB0:   mov r3.w, cb0[9].w
  65  0x00000CC8: else 
  66  0x00000CCC:   mov r5.xyz, l(1.000000,1.000000,1.000000,0)
  67  0x00000CEC:   mov r3.zw, l(0,0,1.000000,0)
  68  0x00000D0C: endif 
  69  0x00000D10: sample_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t18.yzwx, s2
  70  0x00000D3C: add r5.w, v2.w, l(-1.000000)
  71  0x00000D58: mad r5.w, cb0[14].w, r5.w, l(1.000000)
  72  0x00000D80: min r5.w, r1.w, r5.w
  73  0x00000D9C: lt r6.x, l(0.000000), cb0[12].x
  74  0x00000DBC: dp3 r6.y, -v2.xyzx, -v2.xyzx
  75  0x00000DE0: rsq r6.y, r6.y
  76  0x00000DF4: mul r6.yzw, r6.yyyy, -v2.xxyz
  77  0x00000E14: dp3_sat r6.y, r1.xyzx, r6.yzwy
  78  0x00000E30: add r6.z, -r6.y, l(1.000000)
  79  0x00000E50: add r6.y, -r6.z, r6.y
  80  0x00000E70: mad r6.y, cb0[14].z, r6.y, r6.z
  81  0x00000E98: mul r6.z, cb0[12].y, l(10.000000)
  82  0x00000EB8: mad r6.w, cb0[12].y, l(10.000000), l(1.000000)
  83  0x00000EE0: div r7.x, l(-1.000000), r6.w
  84  0x00000EFC: add r7.y, -r7.x, l(1.000000)
  85  0x00000F1C: mad r7.x, cb0[12].x, r7.y, r7.x
  86  0x00000F44: mad r6.y, r6.y, r6.w, -r6.z
  87  0x00000F6C: mad_sat r6.y, r7.x, r6.w, r6.y
  88  0x00000F90: mul r6.z, r6.y, r6.y
  89  0x00000FAC: dp2 r6.y, r6.zzzz, r6.yyyy
  90  0x00000FC8: mad r6.y, r6.z, l(3.000000), -r6.y
  91  0x00000FF0: mul r6.y, r6.y, cb0[11].w
  92  0x00001010: add r7.xyz, v2.xyzx, cb1[19].xyzx
  93  0x00001030: add r8.xyz, r7.xyzx, -cb0[13].xyzx
  94  0x00001054: dp3 r6.z, r8.xyzx, r8.xyzx
  95  0x00001070: sqrt r6.z, r6.z
  96  0x00001084: div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[13].w
  97  0x000010B0: mul_sat r6.z, r6.w, r6.z
  98  0x000010CC: mad r6.w, r6.z, l(-2.000000), l(3.000000)
  99  0x000010F0: mul r6.z, r6.z, r6.z
 100  0x0000110C: mad r6.z, -r6.w, r6.z, l(1.000000)
 101  0x00001134: dp3 r1.x, r2.xyzx, r1.xyzx
 102  0x00001150: max r1.x, r1.x, l(0.000000)
 103  0x0000116C: div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[14].x
 104  0x00001198: add r1.x, r1.y, r1.x
 105  0x000011B4: add r1.xy, r1.xwxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
 106  0x000011DC: mul r1.x, r1.x, cb0[14].x
 107  0x000011FC: mad r1.y, cb0[14].y, r1.y, l(1.000000)
 108  0x00001224: mul r1.x, r1.x, r6.z
 109  0x00001240: mul r1.x, r1.y, r1.x
 110  0x0000125C: mul_sat r1.x, r1.x, r6.y
 111  0x00001278: add r1.yzw, -r5.xxyz, cb0[11].xxyz
 112  0x0000129C: mad r1.yzw, r1.xxxx, r1.yyzw, r5.xxyz
 113  0x000012C0: max r6.yz, r1.xxxx, r3.zzwz
 114  0x000012DC: movc r1.xyz, r6.xxxx, r1.yzwy, r5.xyzx
 115  0x00001300: movc r3.zw, r6.xxxx, r6.yyyz, r3.zzzw
 116  0x00001324: mov_sat r1.w, r3.w
 117  0x00001338: mul r1.w, r1.w, r3.z
 118  0x00001354: add r1.xyz, -r4.xyzx, r1.xyzx
 119  0x00001374: mad r1.xyz, r1.wwww, r1.xyzx, r4.xyzx
 120  0x00001398: mul r1.w, r3.w, r3.z
 121  0x000013B4: dp3 r3.z, v2.xyzx, v2.xyzx
 122  0x000013D0: rsq r3.w, r3.z
 123  0x000013E4: mul r4.xyz, r3.wwww, v2.xyzx
 124  0x00001400: dp3_sat r5.x, -r4.xyzx, r2.xyzx
 125  0x00001420: max r5.y, r1.z, r1.y
 126  0x0000143C: max r5.y, r1.x, r5.y
 127  0x00001458: mul_sat r5.y, r5.y, l(25.000000)
 128  0x00001474: add r6.xyz, r1.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
 129  0x0000149C: mad r6.xyz, r4.wwww, r6.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
 130  0x000014CC: mul r8.xyz, r5.yyyy, r6.xyzx
 131  0x000014E8: mul r5.z, r3.x, r3.x
 132  0x00001504: mul r5.z, r5.z, r5.z
 133  0x00001520: dp2 r5.z, r5.zzzz, r5.xxxx
 134  0x0000153C: mad r9.xyz, r8.xyzx, r5.zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
 135  0x0000156C: ftoi r10.xy, v5.xyxx
 136  0x00001580: mov r10.zw, l(0,0,0,0)
 137  0x000015A0: ld_indexable(texture2d)(uint,uint,uint,uint) r5.z, r10.xyww, t5.yzxw
 138  0x000015C4: utof r6.w, r5.z
 139  0x000015D8: mul r6.w, r6.w, l(0.003922)
 140  0x000015F4: min r6.w, r6.w, l(1.000000)
 141  0x00001610: ieq r11.xy, l(1, 2, 0, 0), cb4[32].yyyy
 142  0x0000163C: ushr r5.z, r5.z, l(24)
 143  0x00001658: utof r5.z, r5.z
 144  0x0000166C: mul r5.z, r5.z, l(0.003922)
 145  0x00001688: movc r5.z, r11.y, r5.z, l(1.000000)
 146  0x000016AC: movc r5.z, r11.x, r6.w, r5.z
 147  0x000016D0: if_nz cb4[32].x
 148  0x000016E0:   ld_indexable(texture2d)(float,float,float,float) r10.xy, r10.xyzw, t4.ywxz
 149  0x00001704:   min r6.w, r10.y, r10.x
 150  0x00001720: else 
 151  0x00001724:   mov r6.w, l(1.000000)
 152  0x00001738: endif 
 153  0x0000173C: resinfo_indexable(texture2darray)(float,float,float,float) r10.xyz, l(0), t6.xyzw
 154  0x00001760: ftoi r10.xyz, r10.xyzx
 155  0x00001774: iadd r10.xy, r10.xyxx, l(-1, -1, 0, 0)
 156  0x0000179C: itof r10.xy, r10.xyxx
 157  0x000017B0: min r10.xy, r10.xyxx, v5.xyxx
 158  0x000017CC: ftoi r11.yz, r10.xxyx
 159  0x000017E0: and r10.xyw, l(4, 1, 0, 2), cb4[0].wwww
 160  0x0000180C: if_nz r10.x
 161  0x00001818:   mov r11.xw, l(0,0,0,0)
 162  0x00001838:   ld_indexable(texture2darray)(float,float,float,float) r8.w, r11.yzxw, t6.yzwx
 163  0x0000185C:   iadd r9.w, r10.z, l(-1)
 164  0x00001878:   imin r11.x, r9.w, l(1)
 165  0x00001894:   mov r9.w, r8.w
 166  0x000018A8:   mov r10.x, r8.w
 167  0x000018BC: else 
 168  0x000018C0:   mov r9.w, r5.z
 169  0x000018D4:   mov r10.x, r5.z
 170  0x000018E8:   mov r8.w, r5.z
 171  0x000018FC:   mov r11.x, l(0)
 172  0x00001910: endif 
 173  0x00001914: if_nz r10.y
 174  0x00001920:   mov r11.w, l(0)
 175  0x00001934:   ld_indexable(texture2darray)(float,float,float,float) r10.x, r11.yzxw, t6.xyzw
 176  0x00001958:   iadd r10.y, r11.x, l(1)
 177  0x00001974:   iadd r10.z, r10.z, l(-1)
 178  0x00001990:   imin r11.x, r10.z, r10.y
 179  0x000019AC: endif 
 180  0x000019B0: if_nz r10.w
 181  0x000019BC:   mov r11.w, l(0)
 182  0x000019D0:   ld_indexable(texture2darray)(float,float,float,float) r8.w, r11.yzxw, t6.yzwx
 183  0x000019F4: endif 
 184  0x000019F8: sqrt r10.y, r3.x
 185  0x00001A0C: mul r10.y, r10.y, cb3[26].y
 186  0x00001A2C: dp3 r10.z, r4.xyzx, r2.xyzx
 187  0x00001A48: add r10.z, r10.z, r10.z
 188  0x00001A64: mad r4.xyz, r2.xyzx, -r10.zzzz, r4.xyzx
 189  0x00001A8C: mad r10.z, -r3.x, r3.x, l(1.000000)
 190  0x00001AB4: max r10.z, r10.z, l(0.000000)
 191  0x00001AD0: sqrt r10.w, r10.z
 192  0x00001AE4: mad r10.w, r3.x, r3.x, r10.w
 193  0x00001B08: mul r10.z, r10.w, r10.z
 194  0x00001B24: mad r0.xyz, -r0.xyzx, r0.wwww, r4.xyzx
 195  0x00001B4C: mad r0.xyz, r10.zzzz, r0.xyzx, r2.xyzx
 196  0x00001B70: dp3 r0.w, r0.xyzx, r0.xyzx
 197  0x00001B8C: rsq r0.w, r0.w
 198  0x00001BA0: mul r0.xyz, r0.wwww, r0.xyzx
 199  0x00001BBC: add r4.xy, v5.xyxx, -cb1[26].xyxx
 200  0x00001BE0: ftou r4.xy, r4.xyxx
 201  0x00001BF4: ushr r4.xy, r4.xyxx, cb3[24].xxxx
 202  0x00001C14: imad r4.x, r4.y, cb3[24].y, r4.x
 203  0x00001C3C: imad r4.y, r4.x, cb3[22].z, cb3[22].y
 204  0x00001C68: mul r4.z, v5.w, cb3[25].x
 205  0x00001C88: max r4.z, r4.z, l(0.000000)
 206  0x00001CA4: min r4.z, r4.z, cb3[25].y
 207  0x00001CC4: ftou r4.z, r4.z
 208  0x00001CD8: imad r10.z, r4.z, cb3[22].z, cb3[22].x
 209  0x00001D04: ge r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
 210  0x00001D2C: movc r11.xyz, r11.xyzx, l(0.500000,0.666667,0.833333,0), l(0,0.166667,0.333333,0)
 211  0x00001D68: mul r12.xyz, r2.xyzx, r2.xyzx
 212  0x00001D84: mov r7.w, l(1.000000)
 213  0x00001D98: mov r13.xyz, r7.xyzx
 214  0x00001DAC: mov r13.w, l(1.000000)
 215  0x00001DC0: mov r11.w, l(0)
 216  0x00001DD4: mov r14.xyzw, l(0,0,0,0)
 217  0x00001DF4: mov r15.xyzw, l(0,0,0,0)
 218  0x00001E14: mov r17.xyz, l(0,0,0,0)
 219  0x00001E34: mov r10.w, l(0)
 220  0x00001E48: mov r12.w, l(0)
 221  0x00001E5C: mov r16.xyzw, l(0,0,0,0)
 222  0x00001E7C: loop 
 223  0x00001E80:   uge r17.w, r16.w, cb3[22].z
 224  0x00001EA0:   breakc_nz r17.w
 225  0x00001EAC:   iadd r17.w, r4.y, r16.w
 226  0x00001EC8:   ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t0.xxxx
 227  0x00001EF4:   iadd r18.x, r10.z, r16.w
 228  0x00001F10:   ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.x, r18.x, l(0), t0.xxxx
 229  0x00001F3C:   and r17.w, r17.w, r18.x
 230  0x00001F58:   mov r18.xyzw, r14.xyzw
 231  0x00001F6C:   mov r19.xyzw, r15.xyzw
 232  0x00001F80:   mov r20.xyz, r16.xyzx
 233  0x00001F94:   mov r21.xyz, r17.xyzx
 234  0x00001FA8:   mov r20.w, r10.w
 235  0x00001FBC:   mov r21.w, r12.w
 236  0x00001FD0:   mov r22.x, r16.w
 237  0x00001FE4:   mov r22.y, r17.w
 238  0x00001FF8:   loop 
 239  0x00001FFC:     breakc_z r22.y
 240  0x00002008:     firstbit_lo r22.z, r22.y
 241  0x0000201C:     ishl r22.w, r22.x, l(5)
 242  0x00002038:     iadd r22.z, r22.w, r22.z
 243  0x00002054:     iadd r22.w, r22.y, l(-1)
 244  0x00002070:     and r22.w, r22.w, r22.y
 245  0x0000208C:     imul null, r22.z, r22.z, l(9)
 246  0x000020AC:     and r23.x, l(1), cb3[r22.z + 33].w
 247  0x000020D4:     if_nz r23.x
 248  0x000020E0:       add r23.xyz, r13.xyzx, -cb3[r22.z + 33].xyzx
 249  0x0000210C:       dp3 r23.w, r23.xyzx, r23.xyzx
 250  0x00002128:       sqrt r24.x, r23.w
 251  0x0000213C:       mad_sat r24.x, r24.x, cb3[r22.z + 32].x, cb3[r22.z + 32].y
 252  0x00002178:       add r24.x, -r24.x, l(1.000000)
 253  0x00002198:       eq r24.y, r24.x, l(0.000000)
 254  0x000021B4:       if_nz r24.y
 255  0x000021C0:         mov r22.y, r22.w
 256  0x000021D4:         continue 
 257  0x000021D8:       endif 
 258  0x000021DC:       dp3 r24.y, r23.xyzx, r0.xyzx
 259  0x000021F8:       mad r23.w, -cb3[r22.z + 32].z, cb3[r22.z + 32].z, r23.w
 260  0x00002238:       mad r23.w, r24.y, r24.y, -r23.w
 261  0x00002260:       lt r24.z, l(0.000000), r23.w
 262  0x0000227C:       sqrt r23.w, r23.w
 263  0x00002290:       add r23.w, -r24.y, r23.w
 264  0x000022B0:       mad r23.xyz, r0.xyzx, r23.wwww, r23.xyzx
 265  0x000022D4:       dp3 r23.w, r23.xyzx, r23.xyzx
 266  0x000022F0:       rsq r23.w, r23.w
 267  0x00002304:       mul r23.xyz, r23.wwww, r23.xyzx
 268  0x00002320:       movc r23.xyz, r24.zzzz, r23.xyzx, r0.xyzx
 269  0x00002344:       mov r24.yzw, r0.xxyz
 270  0x00002358:     else 
 271  0x0000235C:       dp4 r25.x, r7.xyzw, cb3[r22.z + 27].xyzw
 272  0x00002384:       dp4 r25.y, r7.xyzw, cb3[r22.z + 28].xyzw
 273  0x000023AC:       dp4 r25.z, r7.xyzw, cb3[r22.z + 29].xyzw
 274  0x000023D4:       add r26.xyz, r25.xyzx, -cb3[r22.z + 30].xyzx
 275  0x00002400:       mul_sat r26.xyz, r26.xyzx, cb3[r22.z + 32].xyzx
 276  0x00002428:       add r27.xyz, -r25.xyzx, cb3[r22.z + 31].xyzx
 277  0x00002454:       mul_sat r28.xyz, r27.xyzx, cb3[r22.z + 32].xyzx
 278  0x0000247C:       min r23.w, r26.z, r26.y
 279  0x00002498:       min r23.w, r23.w, r26.x
 280  0x000024B4:       min r25.w, r28.z, r28.y
 281  0x000024D0:       min r25.w, r25.w, r28.x
 282  0x000024EC:       min r24.x, r23.w, r25.w
 283  0x00002508:       eq r23.w, r24.x, l(0.000000)
 284  0x00002524:       if_nz r23.w
 285  0x00002530:         mov r22.y, r22.w
 286  0x00002544:         continue 
 287  0x00002548:       endif 
 288  0x0000254C:       dp3 r24.y, r0.xyzx, cb3[r22.z + 27].xyzx
 289  0x00002574:       dp3 r24.z, r0.xyzx, cb3[r22.z + 28].xyzx
 290  0x0000259C:       dp3 r24.w, r0.xyzx, cb3[r22.z + 29].xyzx
 291  0x000025C4:       div r26.xyz, r27.xyzx, r24.yzwy
 292  0x000025E0:       add r27.xyz, -r25.xyzx, cb3[r22.z + 30].xyzx
 293  0x0000260C:       div r27.xyz, r27.xyzx, r24.yzwy
 294  0x00002628:       max r26.xyz, r26.xyzx, r27.xyzx
 295  0x00002644:       min r23.w, r26.z, r26.y
 296  0x00002660:       min r23.w, r23.w, r26.x
 297  0x0000267C:       mad r25.xyz, r24.yzwy, |r23.wwww|, r25.xyzx
 298  0x000026A4:       dp3 r23.w, r25.xyzx, r25.xyzx
 299  0x000026C0:       rsq r23.w, r23.w
 300  0x000026D4:       mul r23.xyz, r23.wwww, r25.xyzx
 301  0x000026F0:     endif 
 302  0x000026F4:     mul r23.w, r24.x, r24.x
 303  0x00002710:     mad r24.x, r24.x, l(-2.000000), l(3.000000)
 304  0x00002734:     mul r23.w, r23.w, r24.x
 305  0x00002750:     add r24.xyz, -r23.xyzx, r24.yzwy
 306  0x00002770:     mad r24.xyz, r3.xxxx, r24.xyzx, r23.xyzx
 307  0x00002794:     add r23.x, -r20.w, l(1.000000)
 308  0x000027B4:     mul r23.y, r23.x, r23.w
 309  0x000027D0:     mad r23.x, r23.w, r23.x, r20.w
 310  0x000027F4:     mad r25.xyzw, cb3[r22.z + 35].xyzw, r23.yyyy, r19.xyzw
 311  0x00002824:     mul r26.xyz, r23.yyyy, cb3[r22.z + 34].xyzx
 312  0x0000284C:     utof r24.w, cb3[r22.z + 30].w
 313  0x0000286C:     sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r24.xyzw, t12.xyzw, s2, r10.y
 314  0x000028A0:     mad r24.xyz, r26.xyzx, r24.xyzx, r20.xyzx
 315  0x000028C4:     ige r23.y, cb3[r22.z + 34].w, l(0)
 316  0x000028EC:     if_nz r23.y
 317  0x000028F8:       add r23.y, -r21.w, l(1.000000)
 318  0x00002918:       mul r23.z, r23.y, r23.w
 319  0x00002934:       mad r23.y, r23.w, r23.y, r21.w
 320  0x00002958:       imul null, r22.z, l(9), cb3[r22.z + 34].w
 321  0x00002984:       dp4 r26.x, r13.xyzw, cb2[r22.z + 0].xyzw
 322  0x000029A8:       dp4 r26.y, r13.xyzw, cb2[r22.z + 1].xyzw
 323  0x000029D0:       dp4 r26.z, r13.xyzw, cb2[r22.z + 2].xyzw
 324  0x000029F8:       mul r26.w, r26.z, l(0.166667)
 325  0x00002A14:       max r27.xyz, r26.xywx, cb2[r22.z + 3].xyzx
 326  0x00002A3C:       min r27.xyz, r27.xyzx, cb2[r22.z + 4].xyzx
 327  0x00002A64:       mul r27.w, r27.z, l(6.000000)
 328  0x00002A80:       mad r27.xyz, r27.xywx, cb2[r22.z + 6].xyzx, cb2[r22.z + 7].xyzx
 329  0x00002ABC:       mul r27.w, r27.z, l(0.166667)
 330  0x00002AD8:       add r28.xyz, r11.wwxw, r27.xywx
 331  0x00002AF4:       sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t10.xyzw, s1, l(0.000000)
 332  0x00002B28:       add r29.xyz, r11.wwyw, r27.xywx
 333  0x00002B44:       sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t10.xyzw, s1, l(0.000000)
 334  0x00002B78:       add r27.xyz, r11.wwzw, r27.xywx
 335  0x00002B94:       sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t10.xyzw, s1, l(0.000000)
 336  0x00002BC8:       mul r29.xyz, r12.yyyy, r29.xyzx
 337  0x00002BE4:       mad r28.xyz, r12.xxxx, r28.xyzx, r29.xyzx
 338  0x00002C08:       mad r27.xyz, r12.zzzz, r27.xyzx, r28.xyzx
 339  0x00002C2C:       mul r27.xyz, r27.xyzx, cb2[r22.z + 5].xyzx
 340  0x00002C54:       mad r27.xyz, r23.zzzz, r27.xyzx, r21.xyzx
 341  0x00002C78:       mov_sat r26.xyz, r26.xyzx
 342  0x00002C8C:       mad r26.xyz, r26.xyzx, cb2[r22.z + 6].xyzx, cb2[r22.z + 7].xyzx
 343  0x00002CC8:       sample_l_indexable(texture3d)(float,float,float,float) r26.xyzw, r26.xyzx, t11.xyzw, s1, l(0.000000)
 344  0x00002CFC:       mad r26.xyzw, r23.zzzz, r26.xyzw, r18.xyzw
 345  0x00002D20:     else 
 346  0x00002D24:       mov r26.xyzw, r18.xyzw
 347  0x00002D38:       mov r27.xyz, r21.xyzx
 348  0x00002D4C:       mov r23.y, r21.w
 349  0x00002D60:     endif 
 350  0x00002D64:     lt r22.z, l(0.990000), r23.x
 351  0x00002D80:     lt r23.z, l(0.990000), r23.y
 352  0x00002D9C:     and r22.z, r22.z, r23.z
 353  0x00002DB8:     if_nz r22.z
 354  0x00002DC4:       mov r18.xyzw, r26.xyzw
 355  0x00002DD8:       mov r19.xyzw, r25.xyzw
 356  0x00002DEC:       mov r20.xyz, r24.xyzx
 357  0x00002E00:       mov r21.xyz, r27.xyzx
 358  0x00002E14:       mov r20.w, r23.x
 359  0x00002E28:       mov r21.w, r23.y
 360  0x00002E3C:       mov r22.x, cb3[22].z
 361  0x00002E54:       break 
 362  0x00002E58:     endif 
 363  0x00002E5C:     mov r18.xyzw, r26.xyzw
 364  0x00002E70:     mov r19.xyzw, r25.xyzw
 365  0x00002E84:     mov r20.xyz, r24.xyzx
 366  0x00002E98:     mov r21.xyz, r27.xyzx
 367  0x00002EAC:     mov r20.w, r23.x
 368  0x00002EC0:     mov r21.w, r23.y
 369  0x00002ED4:     mov r22.xy, r22.xwxx
 370  0x00002EE8:   endloop 
 371  0x00002EEC:   mov r14.xyzw, r18.xyzw
 372  0x00002F00:   mov r15.xyzw, r19.xyzw
 373  0x00002F14:   mov r16.xyz, r20.xyzx
 374  0x00002F28:   mov r17.xyz, r21.xyzx
 375  0x00002F3C:   mov r10.w, r20.w
 376  0x00002F50:   mov r12.w, r21.w
 377  0x00002F64:   iadd r16.w, r22.x, l(1)
 378  0x00002F80: endloop 
 379  0x00002F84: add r4.y, -r10.w, l(1.000000)
 380  0x00002FA4: mul r7.x, r4.y, r6.w
 381  0x00002FC0: mov r0.w, l(1.000000)
 382  0x00002FD4: dp4 r11.x, cb3[7].xyzw, r0.xyzw
 383  0x00002FF4: dp4 r11.y, cb3[8].xyzw, r0.xyzw
 384  0x00003014: dp4 r11.z, cb3[9].xyzw, r0.xyzw
 385  0x00003034: mad r0.xyz, r7.xxxx, r11.xyzx, r16.xyzx
 386  0x00003058: add r0.w, -r12.w, l(1.000000)
 387  0x00003078: mul r0.w, r0.w, r6.w
 388  0x00003094: mov r2.w, l(1.000000)
 389  0x000030A8: dp4 r7.x, cb3[7].xyzw, r2.xyzw
 390  0x000030C8: dp4 r7.y, cb3[8].xyzw, r2.xyzw
 391  0x000030E8: dp4 r7.z, cb3[9].xyzw, r2.xyzw
 392  0x00003108: mad r7.xyz, r0.wwww, r7.xyzx, r17.xyzx
 393  0x0000312C: mad r11.xyzw, r4.yyyy, cb3[7].xyzw, r15.xyzw
 394  0x00003154: mad r11.xyzw, r4.yyyy, cb3[8].xyzw, r11.xyzw
 395  0x0000317C: mad r11.xyzw, r4.yyyy, cb3[9].xyzw, r11.xyzw
 396  0x000031A4: dp4 r0.w, r2.xyzw, r11.xyzw
 397  0x000031C0: add r2.w, -r5.x, l(1.000000)
 398  0x000031E0: sqrt r3.y, r2.w
 399  0x000031F4: mad r11.xy, r3.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.007813, 0.007813, 0.000000, 0.000000)
 400  0x00003230: mov r11.z, l(1.000000)
 401  0x00003244: sample_l_indexable(texture2darray)(float,float,float,float) r10.yz, r11.xyzx, t3.zxyw, s1, l(0.000000)
 402  0x00003278: add r2.w, -r10.y, r10.z
 403  0x00003298: mad r11.xyz, r8.xyzx, r2.wwww, r10.yyyy
 404  0x000032BC: mad r2.w, r3.x, cb3[6].x, cb3[6].y
 405  0x000032E8: max r2.w, r2.w, l(1.000000)
 406  0x00003304: dp3 r3.y, r7.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
 407  0x0000332C: div r0.w, r3.y, r0.w
 408  0x00003348: min r0.w, r2.w, r0.w
 409  0x00003364: mul r0.xyz, r0.wwww, r0.xyzx
 410  0x00003380: add r0.w, -r10.z, l(1.000000)
 411  0x000033A0: mad r6.xyz, -r5.yyyy, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 412  0x000033D4: mad r10.yzw, r6.xxyz, l(0.000000, 0.047619, 0.047619, 0.047619), r8.xxyz
 413  0x00003404: mul r12.xyz, r10.yzwy, r11.xyzx
 414  0x00003420: mad r10.yzw, -r0.wwww, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
 415  0x00003454: div r10.yzw, r12.xxyz, r10.yyzw
 416  0x00003470: mul r12.xyz, r0.wwww, r10.yzwy
 417  0x0000348C: mad r10.yzw, r10.yyzw, r0.wwww, r11.xxyz
 418  0x000034B0: add r10.yzw, -r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
 419  0x000034DC: mul r10.yzw, r7.xxyz, r10.yyzw
 420  0x000034F8: mul r7.xyz, r7.xyzx, r12.xyzx
 421  0x00003514: mad r0.xyz, r11.xyzx, r0.xyzx, r7.xyzx
 422  0x00003538: dp4 r0.w, r14.xyzw, cb3[20].xyzw
 423  0x00003558: add r0.w, -r0.w, l(1.000000)
 424  0x00003578: ine r2.w, l(0), cb3[1947].x
 425  0x00003598: lt r3.y, l(0.000000), r0.w
 426  0x000035B4: and r2.w, r2.w, r3.y
 427  0x000035D0: if_nz r2.w
 428  0x000035DC:   mov r7.xy, l(0,0,0,0)
 429  0x000035FC:   mov r2.w, l(-1)
 430  0x00003610:   mov r3.y, l(0)
 431  0x00003624:   mov r4.y, l(0)
 432  0x00003638:   loop 
 433  0x0000363C:     ige r5.y, r4.y, cb3[1947].x
 434  0x0000365C:     breakc_nz r5.y
 435  0x00003668:     ishl r5.y, r4.y, l(2)
 436  0x00003684:     mul r7.zw, v2.yyyy, cb3[r5.y + 1951].xxxy
 437  0x000036AC:     mad r7.zw, cb3[r5.y + 1950].xxxy, v2.xxxx, r7.zzzw
 438  0x000036DC:     mad r7.zw, cb3[r5.y + 1952].xxxy, v2.zzzz, r7.zzzw
 439  0x0000370C:     add r7.xy, r7.zwzz, cb3[r5.y + 1953].xyxx
 440  0x00003734:     max r6.w, |r7.y|, |r7.x|
 441  0x00003758:     dp4 r7.z, cb3[1948].xyzw, icb[r4.y + 0].xyzw
 442  0x0000377C:     lt r6.w, r6.w, r7.z
 443  0x00003798:     if_nz r6.w
 444  0x000037A4:       mul r6.w, v2.y, cb3[r5.y + 1951].z
 445  0x000037CC:       mad r6.w, cb3[r5.y + 1950].z, v2.x, r6.w
 446  0x000037FC:       mad r6.w, cb3[r5.y + 1952].z, v2.z, r6.w
 447  0x0000382C:       add r3.y, r6.w, cb3[r5.y + 1953].z
 448  0x00003854:       mov r2.w, r4.y
 449  0x00003868:       break 
 450  0x0000386C:     endif 
 451  0x00003870:     iadd r4.y, r4.y, l(1)
 452  0x0000388C:     mov r7.xy, l(0,0,0,0)
 453  0x000038AC:     mov r2.w, l(-1)
 454  0x000038C0:     mov r3.y, l(0)
 455  0x000038D4:   endloop 
 456  0x000038D8:   ige r4.y, r2.w, l(0)
 457  0x000038F4:   if_nz r4.y
 458  0x00003900:     dp2 r4.y, v5.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
 459  0x00003928:     frc r4.y, r4.y
 460  0x0000393C:     mul r4.y, r4.y, l(52.982918)
 461  0x00003958:     frc r4.y, r4.y
 462  0x0000396C:     mul r4.y, r4.y, l(15.000000)
 463  0x00003988:     ftoi r4.y, r4.y
 464  0x0000399C:     mad_sat r7.zw, |r7.xxxy|, cb3[1949].yyyy, cb3[1949].xxxx
 465  0x000039CC:     add r7.zw, -r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 466  0x000039F8:     mul r5.y, r7.w, r7.z
 467  0x00003A14:     iadd r6.w, l(-1), cb3[1947].x
 468  0x00003A34:     ilt r6.w, r2.w, r6.w
 469  0x00003A50:     movc r5.y, r6.w, r5.y, l(1.000000)
 470  0x00003A74:     add_sat r3.y, r3.y, cb3[r2.w + 1986].y
 471  0x00003A9C:     mul r7.zw, l(0.000000, 0.000000, 1.000000, -1.000000), cb3[r4.y + 2002].xxxy
 472  0x00003AD0:     mov r11.xy, l(0,0,0,0)
 473  0x00003AF0:     mov r6.w, l(0)
 474  0x00003B04:     loop 
 475  0x00003B08:       uge r11.z, r6.w, l(16)
 476  0x00003B24:       breakc_nz r11.z
 477  0x00003B30:       mul r11.zw, icb[r6.w + 4].xxxy, cb3[r2.w + 1986].xxxx
 478  0x00003B60:       dp2 r12.x, r11.zwzz, r7.zwzz
 479  0x00003B7C:       dp2 r12.y, r11.wzww, cb3[r4.y + 2002].xyxx
 480  0x00003BA4:       add r11.zw, r7.xxxy, r12.xxxy
 481  0x00003BC0:       max r11.zw, r11.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
 482  0x00003BE8:       min r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 483  0x00003C10:       mad r11.zw, r11.zzzw, cb3[r2.w + 1982].zzzw, cb3[r2.w + 1982].xxxy
 484  0x00003C4C:       gather4_indexable(texture2d)(float,float,float,float) r12.xyzw, r11.zwzz, t7.xyzw, s1.x
 485  0x00003C78:       mov r11.zw, r11.xxxy
 486  0x00003C8C:       mov r13.w, l(0)
 487  0x00003CA0:       loop 
 488  0x00003CA4:         uge r15.x, r13.w, l(4)
 489  0x00003CC0:         breakc_nz r15.x
 490  0x00003CCC:         dp4 r15.x, r12.xyzw, icb[r13.w + 0].xyzw
 491  0x00003CEC:         add r15.x, -r3.y, r15.x
 492  0x00003D0C:         ge r15.y, r15.x, l(0.000000)
 493  0x00003D28:         and r15.y, r15.y, l(0x3f800000)
 494  0x00003D44:         add r11.z, r11.z, r15.y
 495  0x00003D60:         mad r11.w, r15.y, r15.x, r11.w
 496  0x00003D84:         iadd r13.w, r13.w, l(1)
 497  0x00003DA0:       endloop 
 498  0x00003DA4:       mov r11.xy, r11.zwzz
 499  0x00003DB8:       iadd r6.w, r6.w, l(1)
 500  0x00003DD4:     endloop 
 501  0x00003DD8:     div r6.w, r11.y, r11.x
 502  0x00003DF4:     div_sat r3.y, r6.w, r3.y
 503  0x00003E10:     mul_sat r6.w, r11.x, l(0.015625)
 504  0x00003E2C:     mad r6.w, r6.w, l(2.000000), l(-1.000000)
 505  0x00003E50:     lt r7.x, l(0.000000), r6.w
 506  0x00003E6C:     lt r7.y, r6.w, l(0.000000)
 507  0x00003E88:     iadd r7.x, -r7.x, r7.y
 508  0x00003EA8:     itof r7.x, r7.x
 509  0x00003EBC:     mad r6.w, -r7.x, r6.w, l(1.000000)
 510  0x00003EE4:     mul r7.y, r6.w, r6.w
 511  0x00003F00:     mul r11.x, r6.w, r7.y
 512  0x00003F1C:     mad r6.w, -r7.y, r6.w, r6.w
 513  0x00003F44:     mad r3.y, r3.y, r6.w, r11.x
 514  0x00003F68:     add r3.y, -r3.y, l(1.000000)
 515  0x00003F88:     mul r3.y, r7.x, r3.y
 516  0x00003FA4:     mad r3.y, r3.y, l(0.500000), l(0.500000)
 517  0x00003FC8:     add r3.y, -r3.y, l(1.000000)
 518  0x00003FE8:     ilt r6.w, cb3[1947].y, r2.w
 519  0x00004008:     min r7.x, r0.w, r3.y
 520  0x00004024:     movc r3.y, r6.w, r7.x, r3.y
 521  0x00004048:     lt r6.w, r5.y, l(1.000000)
 522  0x00004064:     if_nz r6.w
 523  0x00004070:       ishl r6.w, r2.w, l(2)
 524  0x0000408C:       iadd r6.w, r6.w, l(4)
 525  0x000040A8:       mul r11.xyz, v2.yyyy, cb3[r6.w + 1951].xyzx
 526  0x000040D0:       mad r11.xyz, cb3[r6.w + 1950].xyzx, v2.xxxx, r11.xyzx
 527  0x00004100:       mad r11.xyz, cb3[r6.w + 1952].xyzx, v2.zzzz, r11.xyzx
 528  0x00004130:       add r11.xyz, r11.xyzx, cb3[r6.w + 1953].xyzx
 529  0x00004158:       iadd r2.w, r2.w, l(1)
 530  0x00004174:       add_sat r6.w, r11.z, cb3[r2.w + 1986].y
 531  0x0000419C:       mov r7.xy, l(0,0,0,0)
 532  0x000041BC:       mov r11.z, l(0)
 533  0x000041D0:       loop 
 534  0x000041D4:         uge r11.w, r11.z, l(16)
 535  0x000041F0:         breakc_nz r11.w
 536  0x000041FC:         mul r12.xy, icb[r11.z + 4].xyxx, cb3[r2.w + 1986].xxxx
 537  0x0000422C:         dp2 r15.x, r12.xyxx, r7.zwzz
 538  0x00004248:         dp2 r15.y, r12.yxyy, cb3[r4.y + 2002].xyxx
 539  0x00004270:         add r12.xy, r11.xyxx, r15.xyxx
 540  0x0000428C:         max r12.xy, r12.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
 541  0x000042B4:         min r12.xy, r12.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 542  0x000042DC:         mad r12.xy, r12.xyxx, cb3[r2.w + 1982].zwzz, cb3[r2.w + 1982].xyxx
 543  0x00004318:         gather4_indexable(texture2d)(float,float,float,float) r12.xyzw, r12.xyxx, t7.xyzw, s1.x
 544  0x00004344:         mov r15.xy, r7.xyxx
 545  0x00004358:         mov r11.w, l(0)
 546  0x0000436C:         loop 
 547  0x00004370:           uge r13.w, r11.w, l(4)
 548  0x0000438C:           breakc_nz r13.w
 549  0x00004398:           dp4 r13.w, r12.xyzw, icb[r11.w + 0].xyzw
 550  0x000043B8:           add r13.w, -r6.w, r13.w
 551  0x000043D8:           ge r15.z, r13.w, l(0.000000)
 552  0x000043F4:           and r15.z, r15.z, l(0x3f800000)
 553  0x00004410:           add r15.x, r15.z, r15.x
 554  0x0000442C:           mad r15.y, r15.z, r13.w, r15.y
 555  0x00004450:           iadd r11.w, r11.w, l(1)
 556  0x0000446C:         endloop 
 557  0x00004470:         mov r7.xy, r15.xyxx
 558  0x00004484:         iadd r11.z, r11.z, l(1)
 559  0x000044A0:       endloop 
 560  0x000044A4:       div r4.y, r7.y, r7.x
 561  0x000044C0:       div_sat r4.y, r4.y, r6.w
 562  0x000044DC:       mul_sat r6.w, r7.x, l(0.015625)
 563  0x000044F8:       mad r6.w, r6.w, l(2.000000), l(-1.000000)
 564  0x0000451C:       lt r7.x, l(0.000000), r6.w
 565  0x00004538:       lt r7.y, r6.w, l(0.000000)
 566  0x00004554:       iadd r7.x, -r7.x, r7.y
 567  0x00004574:       itof r7.x, r7.x
 568  0x00004588:       mad r6.w, -r7.x, r6.w, l(1.000000)
 569  0x000045B0:       mul r7.y, r6.w, r6.w
 570  0x000045CC:       mul r7.z, r6.w, r7.y
 571  0x000045E8:       mad r6.w, -r7.y, r6.w, r6.w
 572  0x00004610:       mad r4.y, r4.y, r6.w, r7.z
 573  0x00004634:       add r4.y, -r4.y, l(1.000000)
 574  0x00004654:       mul r4.y, r7.x, r4.y
 575  0x00004670:       mad r4.y, r4.y, l(0.500000), l(0.500000)
 576  0x00004694:       add r4.y, -r4.y, l(1.000000)
 577  0x000046B4:       ilt r2.w, cb3[1947].y, r2.w
 578  0x000046D4:       min r6.w, r0.w, r4.y
 579  0x000046F0:       movc r2.w, r2.w, r6.w, r4.y
 580  0x00004714:       add r4.y, -r2.w, r3.y
 581  0x00004734:       mad r3.y, r5.y, r4.y, r2.w
 582  0x00004758:     endif 
 583  0x0000475C:   else 
 584  0x00004760:     mov r3.y, l(1.000000)
 585  0x00004774:   endif 
 586  0x00004778:   sqrt r2.w, r3.z
 587  0x0000478C:   mad_sat r2.w, r2.w, cb3[1949].w, cb3[1949].z
 588  0x000047B8:   add r4.y, -r3.y, l(1.000000)
 589  0x000047D8:   mad r2.w, r2.w, r4.y, r3.y
 590  0x000047FC:   mul r7.xyzw, l(0.004520, 0.004215, -0.004554, -0.002957), cb1[21].wwww
 591  0x00004828:   ge r3.y, cb3[18].z, l(0.000000)
 592  0x00004848:   movc r11.xy, r3.yyyy, l(1.000000,-1.000000,0,0), l(-1.000000,1.000000,0,0)
 593  0x00004884:   add r3.y, r11.x, cb3[18].z
 594  0x000048A4:   div r3.y, l(-1.000000), r3.y
 595  0x000048C0:   mul r12.xyz, cb3[18].yxyy, cb3[18].xxyx
 596  0x000048E4:   mul r15.x, r3.y, r12.x
 597  0x00004900:   mul r4.y, r11.x, r12.y
 598  0x0000491C:   mad r16.x, r4.y, r3.y, l(1.000000)
 599  0x00004940:   mul r16.y, r11.x, r15.x
 600  0x0000495C:   mul r16.z, r11.y, cb3[18].x
 601  0x0000497C:   mad r15.z, r12.z, r3.y, r11.x
 602  0x000049A0:   dp3 r11.x, r16.xyzx, r13.xyzx
 603  0x000049BC:   mov r15.w, -cb3[18].y
 604  0x000049D8:   dp3 r11.y, r15.xzwx, r13.xyzx
 605  0x000049F4:   mad r7.xyzw, r11.xyxy, l(0.000333, 0.000333, 0.000333, 0.000333), r7.xyzw
 606  0x00004A24:   sample_l_indexable(texture2d)(float,float,float,float) r3.y, r7.xyxx, t8.yxzw, s2, l(0.000000)
 607  0x00004A58:   sample_l_indexable(texture2d)(float,float,float,float) r4.y, r7.zwzz, t8.xyzw, s2, l(0.000000)
 608  0x00004A8C:   min_sat r3.y, r3.y, r4.y
 609  0x00004AA8:   mul r0.w, r2.w, r3.y
 610  0x00004AC4: endif 
 611  0x00004AC8: lt r2.w, l(0.000000), r0.w
 612  0x00004AE4: dp3 r3.y, cb3[18].xyzx, r2.xyzx
 613  0x00004B04: lt r4.y, l(0.000000), r3.y
 614  0x00004B20: and r2.w, r2.w, r4.y
 615  0x00004B3C: if_nz r2.w
 616  0x00004B48:   mul r7.xyz, r0.wwww, cb3[19].xyzx
 617  0x00004B68:   mov_sat r3.y, r3.y
 618  0x00004B7C:   mad r11.xyz, -v2.xyzx, r3.wwww, cb3[18].xyzx
 619  0x00004BA8:   dp3 r0.w, r11.xyzx, r11.xyzx
 620  0x00004BC4:   rsq r0.w, r0.w
 621  0x00004BD8:   mul r11.xyz, r0.wwww, r11.xyzx
 622  0x00004BF4:   max r0.w, r3.x, l(0.000000)
 623  0x00004C10:   dp3 r2.w, r11.xyzx, r2.xyzx
 624  0x00004C2C:   dp3_sat r4.y, cb3[18].xyzx, r11.xyzx
 625  0x00004C4C:   add r4.y, -r4.y, l(1.000000)
 626  0x00004C6C:   mul r5.y, r4.y, r4.y
 627  0x00004C88:   mul r5.y, r5.y, r5.y
 628  0x00004CA4:   mul r4.y, r4.y, r5.y
 629  0x00004CC0:   mad r11.xyz, r6.xyzx, r4.yyyy, r8.xyzx
 630  0x00004CE4:   mul r4.y, r0.w, r0.w
 631  0x00004D00:   mul r5.y, r4.y, r4.y
 632  0x00004D1C:   mad r6.w, r2.w, r5.y, -r2.w
 633  0x00004D44:   mad r2.w, r6.w, r2.w, l(1.000000)
 634  0x00004D68:   mul r2.w, r2.w, r2.w
 635  0x00004D84:   max r2.w, r2.w, l(0.000000)
 636  0x00004DA0:   div r2.w, r5.y, r2.w
 637  0x00004DBC:   mad r0.w, -r0.w, r0.w, l(1.000000)
 638  0x00004DE4:   mad r5.y, r5.x, r0.w, r4.y
 639  0x00004E08:   mad r0.w, r3.y, r0.w, r4.y
 640  0x00004E2C:   mul r0.w, r0.w, r5.x
 641  0x00004E48:   mad r0.w, r3.y, r5.y, r0.w
 642  0x00004E6C:   max r0.w, r0.w, l(0.000010)
 643  0x00004E88:   div r0.w, l(0.500000), r0.w
 644  0x00004EA4:   mul r0.w, r0.w, r2.w
 645  0x00004EC0:   mul r0.w, r3.y, r0.w
 646  0x00004EDC:   mul r11.xyz, r0.wwww, r11.xyzx
 647  0x00004EF8:   mul r11.xyz, r9.xyzx, r11.xyzx
 648  0x00004F14:   mul r11.xyz, r7.xyzx, r11.xyzx
 649  0x00004F30:   mad r7.xyz, r3.yyyy, r7.xyzx, cb3[17].xyzx
 650  0x00004F58: else 
 651  0x00004F5C:   mov r7.xyz, cb3[17].xyzx
 652  0x00004F74:   mov r11.xyz, l(0,0,0,0)
 653  0x00004F94: endif 
 654  0x00004F98: imad r0.w, r4.x, cb3[21].z, cb3[21].y
 655  0x00004FC4: imad r2.w, r4.z, cb3[21].z, cb3[21].x
 656  0x00004FF0: dp3 r3.y, v2.xyzx, r2.xyzx
 657  0x0000500C: mov r12.xyz, v2.xyzx
 658  0x00005020: mov r12.w, l(1.000000)
 659  0x00005034: mov r4.y, v5.y
 660  0x00005048: mov r15.xyzw, r14.xyzw
 661  0x0000505C: mov r16.xyz, r7.xyzx
 662  0x00005070: mov r17.xyz, r11.xyzx
 663  0x00005084: mov r18.xyz, r10.yzwy
 664  0x00005098: mov r4.z, r8.w
 665  0x000050AC: mov r5.y, l(0)
 666  0x000050C0: loop 
 667  0x000050C4:   uge r6.w, r5.y, cb3[21].z
 668  0x000050E4:   breakc_nz r6.w
 669  0x000050F0:   iadd r6.w, r0.w, r5.y
 670  0x0000510C:   ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r6.w, r6.w, l(0), t0.xxxx
 671  0x00005138:   iadd r7.w, r2.w, r5.y
 672  0x00005154:   ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r7.w, r7.w, l(0), t0.xxxx
 673  0x00005180:   and r6.w, r6.w, r7.w
 674  0x0000519C:   ishl r7.w, r5.y, l(5)
 675  0x000051B8:   mov r19.xyzw, r15.xyzw
 676  0x000051CC:   mov r20.xyz, r16.xyzx
 677  0x000051E0:   mov r21.xyz, r17.xyzx
 678  0x000051F4:   mov r22.xyz, r18.xyzx
 679  0x00005208:   mov r11.w, r4.z
 680  0x0000521C:   mov r13.w, r6.w
 681  0x00005230:   loop 
 682  0x00005234:     breakc_z r13.w
 683  0x00005240:     firstbit_lo r16.w, r13.w
 684  0x00005254:     iadd r16.w, r7.w, r16.w
 685  0x00005270:     iadd r17.w, r13.w, l(-1)
 686  0x0000528C:     and r13.w, r13.w, r17.w
 687  0x000052A8:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r23.xyzw, r16.w, l(0), t9.xyzw
 688  0x000052D4:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r24.xyzw, r16.w, l(16), t9.xyzw
 689  0x00005300:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r25.xyzw, r16.w, l(32), t9.xyzw
 690  0x0000532C:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r26.xyzw, r16.w, l(48), t9.xyzw
 691  0x00005358:     dp4 r23.x, r12.xyzw, r23.xyzw
 692  0x00005374:     dp4 r23.y, r12.xyzw, r24.xyzw
 693  0x00005390:     dp4 r23.z, r12.xyzw, r25.xyzw
 694  0x000053AC:     dp4 r17.w, r12.xyzw, r26.xyzw
 695  0x000053C8:     div r23.xyz, r23.xyzx, r17.wwww
 696  0x000053E4:     lt r24.xyz, l(-1.000000, -1.000000, 0.000000, 0.000000), r23.xyzx
 697  0x0000540C:     and r17.w, r24.y, r24.x
 698  0x00005428:     and r17.w, r24.z, r17.w
 699  0x00005444:     lt r24.xyz, r23.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 700  0x0000546C:     and r18.w, r24.y, r24.x
 701  0x00005488:     and r18.w, r24.z, r18.w
 702  0x000054A4:     and r17.w, r17.w, r18.w
 703  0x000054C0:     not r17.w, r17.w
 704  0x000054D4:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r24.xyzw, r16.w, l(272), t9.xyzw
 705  0x00005500:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r25.xyzw, r16.w, l(288), t9.xyzw
 706  0x0000552C:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r26.xyzw, r16.w, l(304), t9.xyzw
 707  0x00005558:     dp4 r24.x, r12.xyzw, r24.xyzw
 708  0x00005574:     dp4 r24.y, r12.xyzw, r25.xyzw
 709  0x00005590:     dp4 r24.z, r12.xyzw, r26.xyzw
 710  0x000055AC:     ge r24.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), |r24.xyzx|
 711  0x000055D8:     and r18.w, r24.y, r24.x
 712  0x000055F4:     and r18.w, r24.z, r18.w
 713  0x00005610:     not r18.w, r18.w
 714  0x00005624:     or r17.w, r17.w, r18.w
 715  0x00005640:     if_z r17.w
 716  0x0000564C:       ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r24.xyzw, r16.w, l(320), t9.xyzw
 717  0x00005678:       dp3 r17.w, r24.xyzx, r2.xyzx
 718  0x00005694:       add r17.w, -r3.y, r17.w
 719  0x000056B4:       mad r17.w, r24.w, l(2.000000), r17.w
 720  0x000056D8:       ge r17.w, r17.w, l(0.000000)
 721  0x000056F4:       if_nz r17.w
 722  0x00005700:         ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r24.xyzw, r16.w, l(160), t9.xywz
 723  0x0000572C:         ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r25.xyz, r16.w, l(240), t9.xyzx
 724  0x00005758:         ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r26.xyz, r16.w, l(252), t9.xyzx
 725  0x00005784:         mov r25.w, r26.x
 726  0x00005798:         dp4 r17.w, r19.xyzw, r25.xyzw
 727  0x000057B4:         add r17.w, -r17.w, l(1.000000)
 728  0x000057D4:         mul r25.xyz, r17.wwww, r24.xywx
 729  0x000057F0:         ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(128), t9.xyzw
 730  0x0000581C:         ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(144), t9.xyzw
 731  0x00005848:         ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(176), t9.xyzw
 732  0x00005874:         ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r30.xyz, r16.w, l(192), t9.xyzx
 733  0x000058A0:         add r31.xyzw, r29.wxyw, r29.wxyw
 734  0x000058BC:         mul r26.xw, r29.yyyz, r31.yyyw
 735  0x000058D8:         mad r17.w, -r31.z, r29.y, l(1.000000)
 736  0x00005900:         dp2 r18.w, r29.zzzz, r29.zzzz
 737  0x0000591C:         add r32.x, r17.w, -r18.w
 738  0x0000593C:         add r32.y, r26.w, r26.x
 739  0x00005958:         mul r31.xzw, r29.yyzx, r31.xxzw
 740  0x00005974:         mad r32.z, r31.y, r29.z, -r31.x
 741  0x0000599C:         mad r33.x, r31.y, r29.y, -r26.w
 742  0x000059C4:         mad r17.w, -r31.y, r29.x, -r18.w
 743  0x000059F0:         add r33.y, r17.w, l(1.000000)
 744  0x00005A0C:         add r33.z, r31.w, r31.z
 745  0x00005A28:         lt r26.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r28.zzzw
 746  0x00005A50:         mul_sat r17.w, r23.z, r28.z
 747  0x00005A6C:         mad r18.w, r17.w, l(-2.000000), l(3.000000)
 748  0x00005A90:         mul r17.w, r17.w, r17.w
 749  0x00005AAC:         mul r17.w, r17.w, r18.w
 750  0x00005AC8:         movc r17.w, r26.x, r17.w, l(1.000000)
 751  0x00005AEC:         add r18.w, -r23.z, l(1.000000)
 752  0x00005B0C:         mul_sat r18.w, r28.w, r18.w
 753  0x00005B28:         mad r20.w, r18.w, l(-2.000000), l(3.000000)
 754  0x00005B4C:         mul r18.w, r18.w, r18.w
 755  0x00005B68:         mul r18.w, r18.w, r20.w
 756  0x00005B84:         mul r18.w, r17.w, r18.w
 757  0x00005BA0:         movc r31.w, r26.w, r18.w, r17.w
 758  0x00005BC4:         ne r17.w, r27.w, l(0.000000)
 759  0x00005BE0:         add r34.xyz, r27.xyzx, -v2.xyzx
 760  0x00005C00:         dp3 r18.w, r34.xyzx, r34.xyzx
 761  0x00005C1C:         max r20.w, r27.w, r18.w
 762  0x00005C38:         div r20.w, r27.w, r20.w
 763  0x00005C54:         mul r20.w, r20.w, r31.w
 764  0x00005C70:         sqrt r18.w, r18.w
 765  0x00005C84:         mad_sat r21.w, r28.y, r18.w, r28.x
 766  0x00005CA8:         mad r22.w, r21.w, l(-2.000000), l(3.000000)
 767  0x00005CCC:         mul r21.w, r21.w, r21.w
 768  0x00005CE8:         mul r21.w, r21.w, r22.w
 769  0x00005D04:         mul r20.w, r20.w, r21.w
 770  0x00005D20:         mad r28.xyz, -r33.xyzx, r30.zzzz, r34.xyzx
 771  0x00005D48:         mad r33.xyz, r33.xyzx, r30.zzzz, r34.xyzx
 772  0x00005D6C:         add r33.xyz, -r28.xyzx, r33.xyzx
 773  0x00005D8C:         dp3 r21.w, -r28.xyzx, r33.xyzx
 774  0x00005DAC:         dp3 r22.w, r33.xyzx, r33.xyzx
 775  0x00005DC8:         ge r23.w, l(0.000000), r21.w
 776  0x00005DE4:         div r21.w, r21.w, r22.w
 777  0x00005E00:         min r21.w, r21.w, l(1.000000)
 778  0x00005E1C:         mad r33.xyz, r33.xyzx, r21.wwww, r28.xyzx
 779  0x00005E40:         movc r28.xyz, r23.wwww, r28.xyzx, r33.xyzx
 780  0x00005E64:         dp3 r21.w, r28.xyzx, r28.xyzx
 781  0x00005E80:         rsq r21.w, r21.w
 782  0x00005E94:         mul r28.xyz, r21.wwww, r28.xyzx
 783  0x00005EB0:         dp3 r21.w, r32.xyzx, r28.xyzx
 784  0x00005ECC:         mad_sat r21.w, r30.y, r21.w, r30.x
 785  0x00005EF0:         mul r28.w, r20.w, r21.w
 786  0x00005F0C:         div r28.xyz, r34.xyzx, r18.wwww
 787  0x00005F28:         mov r31.xyz, r27.xyzx
 788  0x00005F3C:         movc r27.xyzw, r17.wwww, r28.xyzw, r31.xyzw
 789  0x00005F60:         mul r25.xyz, r25.xyzx, r27.wwww
 790  0x00005F7C:         eq r17.w, r24.z, l(0.000000)
 791  0x00005F98:         if_nz r17.w
 792  0x00005FA4:           ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r28.xyz, r16.w, l(224), t9.xyzx
 793  0x00005FD0:           eq r17.w, r28.z, l(0.000000)
 794  0x00005FEC:           if_nz r17.w
 795  0x00005FF8:             add r26.xw, r28.xxxy, l(-1.000000, 0.000000, 0.000000, -1.000000)
 796  0x00006020:             add r30.xy, |r23.xyxx|, l(-1.000000, -1.000000, 0.000000, 0.000000)
 797  0x0000604C:             div r26.xw, l(1.000000, 1.000000, 1.000000, 1.000000), r26.xxxw
 798  0x00006074:             mul_sat r26.xw, r26.xxxw, r30.xxxy
 799  0x00006090:             mad r30.xy, r26.xwxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
 800  0x000060CC:             mul r26.xw, r26.xxxw, r26.xxxw
 801  0x000060E8:             mul r26.xw, r26.xxxw, r30.xxxy
 802  0x00006104:             mul r17.w, r26.w, r26.x
 803  0x00006120:           else 
 804  0x00006124:             mul r26.xw, |r23.xxxy|, r28.yyyx
 805  0x00006144:             div r18.w, l(2.000000), r28.z
 806  0x00006160:             log r26.xw, r26.xxxw
 807  0x00006174:             mul r26.xw, r18.wwww, r26.xxxw
 808  0x00006190:             exp r26.xw, r26.xxxw
 809  0x000061A4:             add r20.w, r26.w, r26.x
 810  0x000061C0:             mul r21.w, r28.y, r28.x
 811  0x000061DC:             max r20.w, r20.w, l(0.000000)
 812  0x000061F8:             mul r22.w, r28.z, l(-0.500000)
 813  0x00006214:             log r20.w, r20.w
 814  0x00006228:             mul r20.w, r20.w, r22.w
 815  0x00006244:             exp r20.w, r20.w
 816  0x00006258:             mul r23.w, r20.w, r21.w
 817  0x00006274:             log r26.xw, |r23.xxxy|
 818  0x0000628C:             mul r26.xw, r18.wwww, r26.xxxw
 819  0x000062A8:             exp r26.xw, r26.xxxw
 820  0x000062BC:             add r18.w, r26.w, r26.x
 821  0x000062D8:             max r18.w, r18.w, l(0.000000)
 822  0x000062F4:             log r18.w, r18.w
 823  0x00006308:             mul r18.w, r18.w, r22.w
 824  0x00006324:             exp r18.w, r18.w
 825  0x00006338:             lt r22.w, r23.w, r18.w
 826  0x00006354:             mad r20.w, r21.w, r20.w, -r18.w
 827  0x0000637C:             add r21.w, -r18.w, l(1.000000)
 828  0x0000639C:             div r20.w, l(1.000000, 1.000000, 1.000000, 1.000000), r20.w
 829  0x000063C4:             mul_sat r20.w, r20.w, r21.w
 830  0x000063E0:             mad r21.w, r20.w, l(-2.000000), l(3.000000)
 831  0x00006404:             mul r20.w, r20.w, r20.w
 832  0x00006420:             mul r20.w, r20.w, r21.w
 833  0x0000643C:             lt r18.w, l(1.000000), r18.w
 834  0x00006458:             and r18.w, r18.w, l(0x3f800000)
 835  0x00006474:             movc r17.w, r22.w, r20.w, r18.w
 836  0x00006498:           endif 
 837  0x0000649C:           mul r28.xyz, r17.wwww, r25.xyzx
 838  0x000064B8:         else 
 839  0x000064BC:           lt r17.w, r24.z, l(0.000000)
 840  0x000064D8:           if_nz r17.w
 841  0x000064E4:             mul r30.xyz, r29.xzyx, -r27.yxzy
 842  0x00006504:             mad r30.xyz, -r27.xzyx, r29.yxzy, -r30.xyzx
 843  0x00006530:             mad r30.xyz, -r27.zyxz, r29.wwww, r30.xyzx
 844  0x00006558:             dp3 r17.w, -r27.xyzx, r29.xyzx
 845  0x00006578:             mul r31.xyz, r17.wwww, r29.yxzy
 846  0x00006594:             mad r31.xyz, r30.yzxy, r29.wwww, r31.xyzx
 847  0x000065B8:             mul r32.xyz, -r29.xzyx, r30.xyzx
 848  0x000065D8:             mad r29.xyz, -r29.zyxz, r30.zxyz, -r32.xyzx
 849  0x00006604:             add r29.xyz, r29.xyzx, r31.xyzx
 850  0x00006620:             min r17.w, |r29.y|, |r29.x|
 851  0x00006644:             max r18.w, |r29.y|, |r29.x|
 852  0x00006668:             div r18.w, l(1.000000, 1.000000, 1.000000, 1.000000), r18.w
 853  0x00006690:             mul r17.w, r17.w, r18.w
 854  0x000066AC:             mul r18.w, r17.w, r17.w
 855  0x000066C8:             mad r20.w, r18.w, l(0.020835), l(-0.085133)
 856  0x000066EC:             mad r20.w, r18.w, r20.w, l(0.180141)
 857  0x00006710:             mad r20.w, r18.w, r20.w, l(-0.330299)
 858  0x00006734:             mad r18.w, r18.w, r20.w, l(0.999866)
 859  0x00006758:             mul r20.w, r17.w, r18.w
 860  0x00006774:             lt r21.w, |r29.y|, |r29.x|
 861  0x00006798:             mad r20.w, r20.w, l(-2.000000), l(1.570796)
 862  0x000067BC:             and r20.w, r21.w, r20.w
 863  0x000067D8:             mad r17.w, r17.w, r18.w, r20.w
 864  0x000067FC:             lt r18.w, -r29.y, r29.y
 865  0x0000681C:             and r18.w, r18.w, l(0xc0490fdb)
 866  0x00006838:             add r17.w, r17.w, r18.w
 867  0x00006854:             min r18.w, -r29.y, r29.x
 868  0x00006874:             max r20.w, -r29.y, r29.x
 869  0x00006894:             lt r18.w, r18.w, -r18.w
 870  0x000068B4:             ge r20.w, r20.w, -r20.w
 871  0x000068D4:             and r18.w, r18.w, r20.w
 872  0x000068F0:             movc r17.w, r18.w, -r17.w, r17.w
 873  0x00006918:             mul r29.x, r17.w, l(0.159155)
 874  0x00006934:             add r17.w, -|r29.z|, l(1.000000)
 875  0x00006954:             sqrt r17.w, r17.w
 876  0x00006968:             mad r18.w, |r29.z|, l(-0.018729), l(0.074261)
 877  0x00006990:             mad r18.w, r18.w, |r29.z|, l(-0.212114)
 878  0x000069B8:             mad r18.w, r18.w, |r29.z|, l(1.570729)
 879  0x000069E0:             mul r20.w, r17.w, r18.w
 880  0x000069FC:             mad r20.w, r20.w, l(-2.000000), l(3.141593)
 881  0x00006A20:             lt r21.w, r29.z, -r29.z
 882  0x00006A40:             and r20.w, r20.w, r21.w
 883  0x00006A5C:             mad r17.w, r18.w, r17.w, r20.w
 884  0x00006A80:             mul r29.y, r17.w, l(0.318310)
 885  0x00006A9C:             mov r30.z, -r24.z
 886  0x00006AB4:             ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(224), t9.xyzw
 887  0x00006AE0:             mad r30.xy, r29.xyxx, r31.zwzz, r31.xyxx
 888  0x00006B04:             sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r30.xyzx, t2.xyzw, s2, l(0.000000)
 889  0x00006B38:             mul r28.xyz, r25.xyzx, r29.xyzx
 890  0x00006B54:           else 
 891  0x00006B58:             mad r26.xw, r23.xxxy, l(0.500000, 0.000000, 0.000000, -0.500000), l(0.500000, 0.000000, 0.000000, 0.500000)
 892  0x00006B94:             ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(224), t9.xyzw
 893  0x00006BC0:             mad r24.xy, r26.xwxx, r29.zwzz, r29.xyxx
 894  0x00006BE4:             sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t2.xyzw, s5, l(0.000000)
 895  0x00006C18:             mul r28.xyz, r24.xyzx, r25.xyzx
 896  0x00006C34:           endif 
 897  0x00006C38:         endif 
 898  0x00006C3C:         eq r24.xyz, r28.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 899  0x00006C64:         and r17.w, r24.y, r24.x
 900  0x00006C80:         and r17.w, r24.z, r17.w
 901  0x00006C9C:         if_z r17.w
 902  0x00006CA8:           ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r17.w, r16.w, l(268), t9.xxxx
 903  0x00006CD4:           ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r24.xyzw, r16.w, l(208), t9.xyzw
 904  0x00006D00:           lt r18.w, l(0.000000), r24.z
 905  0x00006D1C:           and r20.w, r26.z, r18.w
 906  0x00006D38:           if_nz r18.w
 907  0x00006D44:             and r18.w, r17.w, l(4)
 908  0x00006D60:             mul r25.xy, r23.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
 909  0x00006D88:             movc r23.xy, r18.wwww, r25.xyxx, r23.xyxx
 910  0x00006DAC:             ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r18.w, r16.w, l(412), t9.xxxx
 911  0x00006DD8:             itof r16.w, r16.w
 912  0x00006DEC:             add r4.x, r16.w, v5.x
 913  0x00006E08:             dp2 r4.x, r4.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
 914  0x00006E30:             frc r4.x, r4.x
 915  0x00006E44:             mul r4.x, r4.x, l(52.982918)
 916  0x00006E60:             frc r4.x, r4.x
 917  0x00006E74:             mul r4.x, r4.x, l(15.000000)
 918  0x00006E90:             ftoi r4.x, r4.x
 919  0x00006EA4:             add_sat r16.w, -r23.z, l(1.000001)
 920  0x00006EC4:             mul r23.zw, l(0.000000, 0.000000, 1.000000, -1.000000), cb3[r4.x + 2002].xxxy
 921  0x00006EF8:             mov r25.xy, l(0,0,0,0)
 922  0x00006F18:             mov r21.w, l(0)
 923  0x00006F2C:             loop 
 924  0x00006F30:               uge r22.w, r21.w, l(16)
 925  0x00006F4C:               breakc_nz r22.w
 926  0x00006F58:               mul r25.zw, r18.wwww, icb[r21.w + 4].xxxy
 927  0x00006F7C:               dp2 r29.x, r25.zwzz, r23.zwzz
 928  0x00006F98:               dp2 r29.y, r25.wzww, cb3[r4.x + 2002].xyxx
 929  0x00006FC0:               add r25.zw, r23.xxxy, r29.xxxy
 930  0x00006FDC:               max r25.zw, r25.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
 931  0x00007004:               min r25.zw, r25.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 932  0x0000702C:               mad r25.zw, r25.zzzw, r24.zzzw, r24.xxxy
 933  0x00007050:               gather4_indexable(texture2d)(float,float,float,float) r29.xyzw, r25.zwzz, t7.xyzw, s1.x
 934  0x0000707C:               mov r25.zw, r25.xxxy
 935  0x00007090:               mov r22.w, l(0)
 936  0x000070A4:               loop 
 937  0x000070A8:                 uge r26.x, r22.w, l(4)
 938  0x000070C4:                 breakc_nz r26.x
 939  0x000070D0:                 dp4 r26.x, r29.xyzw, icb[r22.w + 0].xyzw
 940  0x000070F0:                 add r26.x, -r16.w, r26.x
 941  0x00007110:                 ge r26.z, r26.x, l(0.000000)
 942  0x0000712C:                 and r26.z, r26.z, l(0x3f800000)
 943  0x00007148:                 add r25.z, r25.z, r26.z
 944  0x00007164:                 mad r25.w, r26.z, r26.x, r25.w
 945  0x00007188:                 iadd r22.w, r22.w, l(1)
 946  0x000071A4:               endloop 
 947  0x000071A8:               mov r25.xy, r25.zwzz
 948  0x000071BC:               iadd r21.w, r21.w, l(1)
 949  0x000071D8:             endloop 
 950  0x000071DC:             div r4.x, r25.y, r25.x
 951  0x000071F8:             div_sat r4.x, r4.x, r16.w
 952  0x00007214:             mul_sat r16.w, r25.x, l(0.015625)
 953  0x00007230:             mad r16.w, r16.w, l(2.000000), l(-1.000000)
 954  0x00007254:             lt r18.w, l(0.000000), r16.w
 955  0x00007270:             lt r21.w, r16.w, l(0.000000)
 956  0x0000728C:             iadd r18.w, -r18.w, r21.w
 957  0x000072AC:             itof r18.w, r18.w
 958  0x000072C0:             mad r16.w, -r18.w, r16.w, l(1.000000)
 959  0x000072E8:             mul r21.w, r16.w, r16.w
 960  0x00007304:             mul r22.w, r16.w, r21.w
 961  0x00007320:             mad r16.w, -r21.w, r16.w, r16.w
 962  0x00007348:             mad r4.x, r4.x, r16.w, r22.w
 963  0x0000736C:             add r4.x, -r4.x, l(1.000000)
 964  0x0000738C:             mul r4.x, r18.w, r4.x
 965  0x000073A8:             mad r4.x, r4.x, l(0.500000), l(0.500000)
 966  0x000073CC:             mad r4.x, r20.w, -r4.x, l(1.000000)
 967  0x000073F4:             mul r28.xyz, r4.xxxx, r28.xyzx
 968  0x00007410:             eq r23.xyz, r28.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 969  0x00007438:             and r4.x, r23.y, r23.x
 970  0x00007454:             and r4.x, r23.z, r4.x
 971  0x00007470:           else 
 972  0x00007474:             mov r4.x, l(0)
 973  0x00007488:           endif 
 974  0x0000748C:           if_z r4.x
 975  0x00007498:             and r4.x, r17.w, l(1)
 976  0x000074B4:             dp3_sat r16.w, r2.xyzx, r27.xyzx
 977  0x000074D0:             if_z r4.x
 978  0x000074DC:               mad r23.xyz, -v2.xyzx, r3.wwww, r27.xyzx
 979  0x00007504:               dp3 r17.w, r23.xyzx, r23.xyzx
 980  0x00007520:               rsq r17.w, r17.w
 981  0x00007534:               mul r23.xyz, r17.wwww, r23.xyzx
 982  0x00007550:               max r17.w, r3.x, r26.y
 983  0x0000756C:               dp3 r18.w, r23.xyzx, r2.xyzx
 984  0x00007588:               dp3_sat r21.w, r27.xyzx, r23.xyzx
 985  0x000075A4:               add r21.w, -r21.w, l(1.000000)
 986  0x000075C4:               mul r22.w, r21.w, r21.w
 987  0x000075E0:               mul r22.w, r22.w, r22.w
 988  0x000075FC:               mul r21.w, r21.w, r22.w
 989  0x00007618:               mad r23.xyz, r6.xyzx, r21.wwww, r8.xyzx
 990  0x0000763C:               mul r21.w, r17.w, r17.w
 991  0x00007658:               mul r22.w, r21.w, r21.w
 992  0x00007674:               mad r23.w, r18.w, r22.w, -r18.w
 993  0x0000769C:               mad r18.w, r23.w, r18.w, l(1.000000)
 994  0x000076C0:               mul r18.w, r18.w, r18.w
 995  0x000076DC:               max r18.w, r18.w, l(0.000000)
 996  0x000076F8:               div r18.w, r22.w, r18.w
 997  0x00007714:               mad r17.w, -r17.w, r17.w, l(1.000000)
 998  0x0000773C:               mad r22.w, r5.x, r17.w, r21.w
 999  0x00007760:               mad r17.w, r16.w, r17.w, r21.w
1000  0x00007784:               mul r17.w, r5.x, r17.w
1001  0x000077A0:               mad r17.w, r16.w, r22.w, r17.w
1002  0x000077C4:               max r17.w, r17.w, l(0.000010)
1003  0x000077E0:               div r17.w, l(0.500000), r17.w
1004  0x000077FC:               mul r17.w, r17.w, r18.w
1005  0x00007818:               mul r17.w, r16.w, r17.w
1006  0x00007834:               mul r23.xyz, r17.wwww, r23.xyzx
1007  0x00007850:               mul r23.xyz, r9.xyzx, r23.xyzx
1008  0x0000786C:             else 
1009  0x00007870:               mov r23.xyz, l(0,0,0,0)
1010  0x00007890:             endif 
1011  0x00007894:             add r17.w, -r11.w, l(1.000000)
1012  0x000078B4:             mad r17.w, r20.w, r17.w, r11.w
1013  0x000078D8:             mul r16.w, r16.w, r17.w
1014  0x000078F4:             mul r23.xyz, r17.wwww, r23.xyzx
1015  0x00007910:             mad r24.xyz, r16.wwww, r28.xyzx, r22.xyzx
1016  0x00007934:             mad r26.xyz, r16.wwww, r28.xyzx, r20.xyzx
1017  0x00007958:             mad r23.xyz, r23.xyzx, r28.xyzx, r21.xyzx
1018  0x0000797C:             movc r20.xyz, r4.xxxx, r20.xyzx, r26.xyzx
1019  0x000079A0:             movc r21.xyz, r4.xxxx, r21.xyzx, r23.xyzx
1020  0x000079C4:             movc r22.xyz, r4.xxxx, r24.xyzx, r22.xyzx
1021  0x000079E8:           endif 
1022  0x000079EC:         endif 
1023  0x000079F0:       endif 
1024  0x000079F4:     endif 
1025  0x000079F8:   endloop 
1026  0x000079FC:   mov r16.xyz, r20.xyzx
1027  0x00007A10:   mov r17.xyz, r21.xyzx
1028  0x00007A24:   mov r18.xyz, r22.xyzx
1029  0x00007A38:   iadd r5.y, r5.y, l(1)
1030  0x00007A54: endloop 
1031  0x00007A58: min r0.w, r5.z, r9.w
1032  0x00007A74: mul r0.w, r5.w, r0.w
1033  0x00007A90: mad r2.xyz, r1.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
1034  0x00007ACC: mad r3.xyw, r1.xyxz, l(4.795100, 4.795100, 0.000000, 4.795100), l(-0.641700, -0.641700, 0.000000, -0.641700)
1035  0x00007B08: mad r4.xyz, r1.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
1036  0x00007B44: mul r2.w, r0.w, r0.w
1037  0x00007B60: mul r5.x, r0.w, r2.w
1038  0x00007B7C: mul r3.xyw, r2.wwww, r3.xyxw
1039  0x00007B98: mad r2.xyz, r2.xyzx, r5.xxxx, -r3.xywx
1040  0x00007BC0: mad r2.xyz, r4.xyzx, r0.wwww, r2.xyzx
1041  0x00007BE4: min r0.w, r10.x, l(1.000000)
1042  0x00007C00: mad r2.xyz, r18.xyzx, r2.xyzx, r16.xyzx
1043  0x00007C24: add r2.w, -r4.w, l(1.000000)
1044  0x00007C44: mul r3.xyw, r1.xyxz, r2.wwww
1045  0x00007C60: mul r1.xyz, r1.xyzx, r1.wwww
1046  0x00007C7C: mad r1.xyz, r2.xyzx, r3.xywx, r1.xyzx
1047  0x00007CA0: add r1.xyz, r17.xyzx, r1.xyzx
1048  0x00007CBC: mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
1049  0x00007CE0: dp2 r0.w, v2.xyxx, v2.xyxx
1050  0x00007CFC: lt r1.x, cb4[15].x, r0.w
1051  0x00007D1C: lt r1.y, r13.z, cb4[15].y
1052  0x00007D3C: and r1.x, r1.y, r1.x
1053  0x00007D58: if_nz r1.x
1054  0x00007D64:   sqrt r2.y, r0.w
1055  0x00007D78:   mov r2.x, r13.z
1056  0x00007D8C:   mad_sat r1.yz, cb4[12].wwzw, r2.xxyx, cb4[12].yyxy
1057  0x00007DB8:   log r1.yz, r1.yyzy
1058  0x00007DCC:   mul r1.yz, r1.yyzy, cb4[13].yyxy
1059  0x00007DEC:   exp r1.yz, r1.yyzy
1060  0x00007E00:   mul r0.w, r1.y, r1.z
1061  0x00007E1C:   mul r1.y, r0.w, cb4[14].w
1062  0x00007E3C:   mul r1.yzw, r1.yyyy, cb4[14].xxyz
1063  0x00007E5C:   mad r0.w, -r0.w, cb4[14].w, l(1.000000)
1064  0x00007E88:   mad r1.yzw, r0.xxyz, r0.wwww, r1.yyzw
1065  0x00007EAC:   mov r2.xyz, l(0,0,0,0)
1066  0x00007ECC: endif 
1067  0x00007ED0: movc r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
1068  0x00007EF4: and r1.xyz, r1.xxxx, r2.xyzx
1069  0x00007F10: lt r0.w, cb4[22].x, r3.z
1070  0x00007F30: lt r1.w, cb4[22].y, r13.z
1071  0x00007F50: or r0.w, r0.w, r1.w
1072  0x00007F6C: if_nz r0.w
1073  0x00007F78:   sqrt r1.w, r3.z
1074  0x00007F8C:   dp3 r2.x, v2.xyzx, cb4[18].xyzx
1075  0x00007FAC:   dp3 r2.y, v2.xyzx, cb4[19].xyzx
1076  0x00007FCC:   dp3 r2.z, v2.xyzx, cb4[20].xyzx
1077  0x00007FEC:   dp3 r2.w, r2.xyzx, r2.xyzx
1078  0x00008008:   rsq r2.w, r2.w
1079  0x0000801C:   mul r2.xyz, r2.wwww, r2.xyzx
1080  0x00008038:   mad r1.w, r1.w, cb4[16].y, cb4[16].x
1081  0x00008064:   max r1.w, r1.w, l(0.000000)
1082  0x00008080:   log r1.w, r1.w
1083  0x00008094:   mul r1.w, r1.w, cb4[16].w
1084  0x000080B4:   exp r1.w, r1.w
1085  0x000080C8:   mad r2.w, r13.z, cb4[17].y, cb4[17].x
1086  0x000080F4:   max r2.w, r2.w, l(0.000000)
1087  0x00008110:   log r2.w, r2.w
1088  0x00008124:   mul r2.w, r2.w, cb4[17].z
1089  0x00008144:   exp r2.w, r2.w
1090  0x00008158:   max r1.w, r1.w, r2.w
1091  0x00008174:   mad_sat r2.w, -r1.w, cb4[16].z, l(1.000000)
1092  0x000081A0:   mul r2.w, r2.w, cb4[17].w
1093  0x000081C0:   sample_l_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t13.xyzw, s3, r2.w
1094  0x000081F4:   mul r2.xyz, r2.xyzx, cb4[23].xxxx
1095  0x00008214:   min r1.w, r1.w, l(1.000000)
1096  0x00008230:   mul r2.xyz, r1.wwww, r2.xyzx
1097  0x0000824C:   add r1.w, -r1.w, l(1.000000)
1098  0x0000826C:   add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
1099  0x00008298:   mul r2.xyz, r2.xyzx, r3.xyzx
1100  0x000082B4:   mad r2.xyz, r0.xyzx, r1.wwww, r2.xyzx
1101  0x000082D8:   mov r3.xyz, r1.xyzx
1102  0x000082EC: endif 
1103  0x000082F0: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
1104  0x00008314: movc r1.xyz, r0.wwww, r3.xyzx, r1.xyzx
1105  0x00008338: if_nz cb4[0].x
1106  0x00008348:   mad r2.xy, v5.xyxx, cb3[5].zzzz, cb3[5].xyxx
1107  0x00008374:   sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t1.xyzw, s4, l(0.000000)
1108  0x000083A8:   mad r2.xyz, r2.xyzx, cb4[24].xxxx, cb4[24].yyyy
1109  0x000083D4:   add r2.xyz, r2.xyzx, r13.xyzx
1110  0x000083F0:   mul r3.xyz, r2.yyyy, cb4[28].xywx
1111  0x00008410:   mad r2.xyw, cb4[27].xyxw, r2.xxxx, r3.xyxz
1112  0x00008438:   mad r2.xyz, cb4[29].xywx, r2.zzzz, r2.xywx
1113  0x00008460:   add r2.xyz, r2.xyzx, cb4[30].xywx
1114  0x00008480:   div r2.xy, r2.xyxx, r2.zzzz
1115  0x0000849C:   mad r3.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
1116  0x000084D8:   mad_sat r0.w, r2.z, cb4[25].w, cb4[24].z
1117  0x00008504:   mad r0.w, r0.w, cb4[26].x, l(1.000000)
1118  0x0000852C:   log r0.w, r0.w
1119  0x00008540:   mul r3.z, r0.w, cb4[26].y
1120  0x00008560:   sample_l_indexable(texture3d)(float,float,float,float) r2.xyzw, r3.xyzx, t14.xyzw, s6, l(0.000000)
1121  0x00008594:   add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
1122  0x000085C0:   mul r2.xyz, r2.xyzx, r3.xyzx
1123  0x000085DC:   mad r2.xyz, r0.xyzx, r2.wwww, r2.xyzx
1124  0x00008600:   mov r3.xyz, r1.xyzx
1125  0x00008614: endif 
1126  0x00008618: movc o0.xyz, cb4[0].xxxx, r2.xyzx, r0.xyzx
1127  0x00008640: movc r0.xyz, cb4[0].xxxx, r3.xyzx, r1.xyzx
1128  0x00008668: dp3 r0.x, r0.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
1129  0x00008690: add r0.x, -r0.x, l(1.000000)
1130  0x000086B0: mad o0.w, cb0[35].z, -r0.x, r0.x
1131  0x000086DC: ret 
// Approximately 0 instruction slots used
