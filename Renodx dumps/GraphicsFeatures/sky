//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerViewConstantBuffer_t
// {
//
//   float4x4 g_matWorldToProjection;   // Offset:    0 Size:    64
//   float4x4 g_matProjectionToWorld;   // Offset:   64 Size:    64 [unused]
//   float4x4 g_matWorldToView;         // Offset:  128 Size:    64 [unused]
//   float4x4 g_matViewToProjection;    // Offset:  192 Size:    64 [unused]
//   float4 g_vInvProjRow3;             // Offset:  256 Size:    16 [unused]
//   float4 g_vClipPlane0;              // Offset:  272 Size:    16 [unused]
//   float g_flToneMapScalarLinear;     // Offset:  288 Size:     4 [unused]
//   float g_flInvToneMapScalarLinear;  // Offset:  292 Size:     4 [unused]
//   float g_fInvViewportZRange;        // Offset:  296 Size:     4 [unused]
//   float g_fMinViewportZScaled;       // Offset:  300 Size:     4 [unused]
//   float3 g_vCameraPositionWs;        // Offset:  304 Size:    12 [unused]
//   float g_flViewportMinZ;            // Offset:  316 Size:     4 [unused]
//   float3 g_vCameraDirWs;             // Offset:  320 Size:    12 [unused]
//   float g_flViewportMaxZ;            // Offset:  332 Size:     4 [unused]
//   float3 g_vCameraUpDirWs;           // Offset:  336 Size:    12 [unused]
//   float g_flTime;                    // Offset:  348 Size:     4 [unused]
//   float3 g_vDepthPsToVsConversion;   // Offset:  352 Size:    12 [unused]
//   float g_flNearPlane;               // Offset:  364 Size:     4 [unused]
//   float g_flFarPlane;                // Offset:  368 Size:     4 [unused]
//   float g_flLightBinnerFarPlane;     // Offset:  372 Size:     4 [unused]
//   float2 g_vInvViewportSize;         // Offset:  376 Size:     8 [unused]
//   float2 g_vViewportToGBufferRatio;  // Offset:  384 Size:     8 [unused]
//   float2 g_vMorphTextureAtlasSize;   // Offset:  392 Size:     8 [unused]
//   float4 g_vInvGBufferSize;          // Offset:  400 Size:    16 [unused]
//   float2 g_vViewportOffset;          // Offset:  416 Size:     8 [unused]
//   float2 g_vViewportSize;            // Offset:  424 Size:     8 [unused]
//   float2 g_vRenderTargetSize;        // Offset:  432 Size:     8 [unused]
//   float g_flFogBlendToBackground;    // Offset:  440 Size:     4 [unused]
//   float g_flHenyeyGreensteinCoeff;   // Offset:  444 Size:     4 [unused]
//   float3 g_vFogColor;                // Offset:  448 Size:    12 [unused]
//   float g_flNegFogStartOverFogRange; // Offset:  460 Size:     4 [unused]
//   float g_flInvFogRange;             // Offset:  464 Size:     4 [unused]
//   float g_flFogMaxDensity;           // Offset:  468 Size:     4 [unused]
//   float g_flFogExponent;             // Offset:  472 Size:     4 [unused]
//   float g_flMod2xIdentity;           // Offset:  476 Size:     4 [unused]
//   int g_nMSAASampleCount;            // Offset:  480 Size:     4 [unused]
//   float g_flInvMSAASampleCount;      // Offset:  484 Size:     4 [unused]
//   uint g_tCompositeMorphAtlasTextureIndex;// Offset:  488 Size:     4 [unused]
//   uint __pad0;                       // Offset:  492 Size:     4 [unused]
//   float4 g_vFrameBufferCopyInvSizeAndUvScale;// Offset:  496 Size:    16 [unused]
//   float4 g_vCameraAngles;            // Offset:  512 Size:    16 [unused]
//   float4 g_vWorldToCameraOffset;     // Offset:  528 Size:    16 [unused]
//   float4 g_vPrevWorldToCameraOffset; // Offset:  544 Size:    16 [unused]
//   float4x4 g_matPrevWorldToProjection;// Offset:  560 Size:    64 [unused]
//
// }
//
// cbuffer SkyConstantBuffer_t
// {
//
//   float4x3 g_matSkyOsToWs;           // Offset:    0 Size:    48 [unused]
//   float4x3 g_matSkyWsToOs;           // Offset:   48 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerViewConstantBuffer_t           cbuffer      NA          NA            cb0      1 
// SkyConstantBuffer_t               cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// SV_Position              0   xyzw        2      POS   float   xyzw
//
      0x00000000: vs_5_0
      0x00000008: dcl_globalFlags refactoringAllowed
      0x0000000C: dcl_constantbuffer CB0[3], immediateIndexed
      0x0000001C: dcl_constantbuffer CB1[6], immediateIndexed
      0x0000002C: dcl_input v0.xyz
      0x00000038: dcl_output o0.xyz
      0x00000044: dcl_output o1.xyz
      0x00000050: dcl_output_siv o2.xyzw, position
      0x00000060: dcl_temps 1
   0  0x00000068: dp3 r0.x, v0.xyzx, cb1[3].xyzx
   1  0x00000088: dp3 r0.y, v0.xyzx, cb1[4].xyzx
   2  0x000000A8: dp3 r0.z, v0.xyzx, cb1[5].xyzx
   3  0x000000C8: dp3 r0.w, r0.xyzx, r0.xyzx
   4  0x000000E4: rsq r0.w, r0.w
   5  0x000000F8: mul o0.xyz, r0.wwww, r0.xyzx
   6  0x00000114: mov o1.xyz, v0.xyzx
   7  0x00000128: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   8  0x00000148: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   9  0x00000170: mad o2.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
  10  0x00000198: ret 
// Approximately 11 instruction slots used
