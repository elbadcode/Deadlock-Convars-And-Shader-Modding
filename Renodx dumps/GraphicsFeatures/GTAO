//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer GTAOConstantBuffer_t
// {
//
//   struct GTAOConstants
//   {
//       
//       int2 TargetSize;               // Offset:    0
//       float2 TargetPixelSize;        // Offset:    8
//       int2 DepthTargetSize;          // Offset:   16
//       float2 DepthTargetPixelSize;   // Offset:   24
//       float2 DepthUnpackConsts;      // Offset:   32
//       float2 CameraTanHalfFOV;       // Offset:   40
//       float2 NDCToViewMul;           // Offset:   48
//       float2 NDCToViewAdd;           // Offset:   56
//       float2 NDCToViewMul_x_PixelSize;// Offset:   64
//       float EffectRadius;            // Offset:   72
//       float EffectFalloffRange;      // Offset:   76
//       float RadiusMultiplier;        // Offset:   80
//       float Padding0;                // Offset:   84
//       float FinalValuePower;         // Offset:   88
//       float DenoiseBlurBeta;         // Offset:   92
//       float SampleDistributionPower; // Offset:   96
//       float ThinOccluderCompensation;// Offset:  100
//       float DepthMIPSamplingOffset;  // Offset:  104
//       int NoiseIndex;                // Offset:  108
//
//   } g_GTAOConsts;                    // Offset:    0 Size:   112
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// g_sPointClamp                     sampler      NA          NA             s0      1 
// g_srcWorkingAOTerm                texture    uint          2d             t0      1 
// g_srcWorkingEdges                 texture   float          2d             t1      1 
// g_outFinalAOTerm                      UAV    uint          2d             u0      1 
// GTAOConstantBuffer_t              cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
      0x00000000: cs_5_0
      0x00000008: dcl_globalFlags refactoringAllowed
      0x0000000C: dcl_constantbuffer CB0[6], immediateIndexed
      0x0000001C: dcl_sampler s0, mode_default
      0x00000028: dcl_resource_texture2d (uint,uint,uint,uint) t0
      0x00000038: dcl_resource_texture2d (float,float,float,float) t1
      0x00000048: dcl_uav_typed_texture2d (uint,uint,uint,uint) u0
      0x00000058: dcl_input vThreadID.xy
      0x00000060: dcl_temps 19
      0x00000068: dcl_thread_group 8, 8, 1
   0  0x00000078: mov r0.zw, l(0,0,0,0)
   1  0x00000098: ishl r1.yz, vThreadID.xxyx, l(0, 1, 0, 0)
   2  0x000000BC: utof r2.xyzw, r1.yzyz
   3  0x000000D0: add r3.xyzw, r2.xyzw, l(-0.500000, 0.500000, 0.500000, -0.500000)
   4  0x000000F8: mul r2.xy, r2.zwzz, cb0[0].zwzz
   5  0x00000118: ftoi r4.xyzw, r3.zyxy
   6  0x0000012C: ftoi r3.xyzw, r3.xwzw
   7  0x00000140: mov r0.xy, r4.zwzz
   8  0x00000154: ld_indexable(texture2d)(uint,uint,uint,uint) r1.w, r0.xyww, t0.yzwx
   9  0x00000178: ld_aoffimmi_indexable(2,0,0)(texture2d)(uint,uint,uint,uint) r0.x, r0.xyzw, t0.xyzw
  10  0x000001A0: and r0.y, r1.w, l(255)
  11  0x000001BC: utof r5.x, r0.y
  12  0x000001D0: ubfe r0.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.wwww
  13  0x0000020C: ushr r0.w, r1.w, l(24)
  14  0x00000228: utof r0.w, r0.w
  15  0x0000023C: mul r6.w, r0.w, l(0.003922)
  16  0x00000258: utof r5.yz, r0.yyzy
  17  0x0000026C: mad r6.xyz, r5.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  18  0x000002A8: gather4_indexable(texture2d)(float,float,float,float) r0.yzw, r2.xyxx, t1.wxyz, s0.x
  19  0x000002D4: mul r0.yzw, r0.yywz, l(0.000000, 255.500000, 255.500000, 255.500000)
  20  0x000002FC: ftou r0.yzw, r0.yyzw
  21  0x00000310: ubfe r5.xyzw, l(2, 2, 2, 2), l(4, 2, 6, 4), r0.yyzz
  22  0x0000034C: utof r5.xyzw, r5.xyzw
  23  0x00000360: mul r5.xyzw, r5.xyzw, l(0.333333, 0.333333, 0.333333, 0.333333)
  24  0x00000388: ubfe r7.xyz, l(2, 2, 2, 0), l(6, 4, 2, 0), r0.wwww
  25  0x000003C4: and r0.yzw, r0.yyzw, l(0, 3, 3, 3)
  26  0x000003EC: utof r0.yzw, r0.yyzw
  27  0x00000400: mul r0.yzw, r0.yyzw, l(0.000000, 0.333333, 0.333333, 0.333333)
  28  0x00000428: utof r7.xyz, r7.xyzx
  29  0x0000043C: mul r8.x, r5.x, r7.x
  30  0x00000458: mul r8.yz, r7.yyzy, l(0.000000, 0.333333, 0.333333, 0.000000)
  31  0x00000480: gather4_aoffimmi_indexable(1,2,0)(texture2d)(float,float,float,float) r2.zw, r2.xyxx, t1.xyzw, s0.x
  32  0x000004B0: gather4_aoffimmi_indexable(2,0,0)(texture2d)(float,float,float,float) r7.xyz, r2.xyxx, t1.xywz, s0.x
  33  0x000004E0: mul r7.xyz, r7.xzyx, l(255.500000, 255.500000, 255.500000, 0.000000)
  34  0x00000508: ftou r7.xyz, r7.xyzx
  35  0x0000051C: mul r2.xyzw, r2.wwwz, l(255.500000, 255.500000, 255.500000, 255.500000)
  36  0x00000544: ftou r2.xyzw, r2.xyzw
  37  0x00000558: ubfe r9.xyzw, l(2, 2, 2, 2), l(6, 4, 2, 6), r2.xyzw
  38  0x00000594: ubfe r2.xy, l(2, 2, 0, 0), l(4, 2, 0, 0), r2.wwww
  39  0x000005D0: utof r2.xy, r2.xyxx
  40  0x000005E4: utof r9.xyzw, r9.xyzw
  41  0x000005F8: mul r9.xyzw, r9.xyzw, l(0.333333, 0.333333, 0.333333, 0.333333)
  42  0x00000620: mov r10.w, r9.z
  43  0x00000634: mov r8.w, r0.w
  44  0x00000648: mov r10.z, r0.z
  45  0x0000065C: mov r10.x, l(0.333333)
  46  0x00000670: ubfe r11.xyzw, l(2, 2, 2, 2), l(6, 2, 6, 4), r7.xxyy
  47  0x000006AC: utof r11.xyzw, r11.xyzw
  48  0x000006C0: mul r11.xyzw, r11.xyzw, l(0.333333, 0.333333, 0.333333, 0.333333)
  49  0x000006E8: mov r10.y, r11.x
  50  0x000006FC: mul r12.xyzw, r8.xyzw, r10.xyzw
  51  0x00000718: mov r10.xzw, r10.yyxx
  52  0x0000072C: dp4 r0.z, r12.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  53  0x00000754: add_sat r0.z, -r0.z, l(1.500000)
  54  0x00000774: mad r12.xyzw, r0.zzzz, l(0.333333, 0.333333, 0.333333, 0.333333), r12.xyzw
  55  0x000007A4: min r12.xyzw, r12.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  56  0x000007CC: mul r6.xyzw, r6.xyzw, r12.xxxx
  57  0x000007E8: mov r4.zw, l(0,0,0,0)
  58  0x00000808: ld_indexable(texture2d)(uint,uint,uint,uint) r0.z, r4.xyww, t0.yzxw
  59  0x0000082C: ld_aoffimmi_indexable(2,0,0)(texture2d)(uint,uint,uint,uint) r1.w, r4.xyzw, t0.yzwx
  60  0x00000854: and r2.z, r0.z, l(255)
  61  0x00000870: utof r4.x, r2.z
  62  0x00000884: ubfe r2.zw, l(0, 0, 8, 8), l(0, 0, 8, 16), r0.zzzz
  63  0x000008C0: ushr r0.z, r0.z, l(24)
  64  0x000008DC: utof r0.z, r0.z
  65  0x000008F0: mul r13.w, r0.z, l(0.003922)
  66  0x0000090C: utof r4.yz, r2.zzwz
  67  0x00000920: mad r13.xyz, r4.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  68  0x0000095C: mad r4.xyzw, r13.xyzw, cb0[5].wwww, r6.xyzw
  69  0x00000984: and r0.z, r0.x, l(255)
  70  0x000009A0: utof r6.x, r0.z
  71  0x000009B4: ubfe r2.zw, l(0, 0, 8, 8), l(0, 0, 8, 16), r0.xxxx
  72  0x000009F0: ushr r0.x, r0.x, l(24)
  73  0x00000A0C: utof r0.x, r0.x
  74  0x00000A20: mul r14.w, r0.x, l(0.003922)
  75  0x00000A3C: utof r6.yz, r2.zzwz
  76  0x00000A50: mad r14.xyz, r6.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  77  0x00000A8C: mad r4.xyzw, r12.yyyy, r14.xyzw, r4.xyzw
  78  0x00000AB0: mov r6.xy, r3.zwzz
  79  0x00000AC4: mov r6.zw, l(0,0,0,0)
  80  0x00000AE4: ld_indexable(texture2d)(uint,uint,uint,uint) r0.x, r6.xyww, t0.xyzw
  81  0x00000B08: and r0.z, r0.x, l(255)
  82  0x00000B24: utof r15.x, r0.z
  83  0x00000B38: ubfe r2.zw, l(0, 0, 8, 8), l(0, 0, 8, 16), r0.xxxx
  84  0x00000B74: ushr r0.x, r0.x, l(24)
  85  0x00000B90: utof r0.x, r0.x
  86  0x00000BA4: mul r16.w, r0.x, l(0.003922)
  87  0x00000BC0: utof r15.yz, r2.zzwz
  88  0x00000BD4: mad r16.xyz, r15.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  89  0x00000C10: mad r4.xyzw, r12.zzzz, r16.xyzw, r4.xyzw
  90  0x00000C34: ld_aoffimmi_indexable(0,2,0)(texture2d)(uint,uint,uint,uint) r0.x, r6.xyww, t0.xyzw
  91  0x00000C5C: and r0.z, r0.x, l(255)
  92  0x00000C78: utof r15.x, r0.z
  93  0x00000C8C: ubfe r2.zw, l(0, 0, 8, 8), l(0, 0, 8, 16), r0.xxxx
  94  0x00000CC8: ushr r0.x, r0.x, l(24)
  95  0x00000CE4: utof r0.x, r0.x
  96  0x00000CF8: mul r17.w, r0.x, l(0.003922)
  97  0x00000D14: utof r15.yz, r2.zzwz
  98  0x00000D28: mad r17.xyz, r15.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  99  0x00000D64: mad r4.xyzw, r12.wwww, r17.xyzw, r4.xyzw
 100  0x00000D88: mul r5.xyz, r5.yzwy, r12.xzzx
 101  0x00000DA4: add r0.x, r5.y, r5.x
 102  0x00000DC0: mad r0.z, r12.y, r11.y, r5.z
 103  0x00000DE4: mul r2.z, r0.x, l(0.425000)
 104  0x00000E00: mov r3.zw, l(0,0,0,0)
 105  0x00000E20: ld_indexable(texture2d)(uint,uint,uint,uint) r2.w, r3.xyww, t0.yzwx
 106  0x00000E44: and r5.x, r2.w, l(255)
 107  0x00000E60: utof r5.x, r5.x
 108  0x00000E74: ubfe r8.xw, l(8, 0, 0, 8), l(8, 0, 0, 16), r2.wwww
 109  0x00000EB0: ushr r2.w, r2.w, l(24)
 110  0x00000ECC: utof r2.w, r2.w
 111  0x00000EE0: mul r15.w, r2.w, l(0.003922)
 112  0x00000EFC: utof r5.yz, r8.xxwx
 113  0x00000F10: mad r15.xyz, r5.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
 114  0x00000F4C: mad r4.xyzw, r2.zzzz, r15.xyzw, r4.xyzw
 115  0x00000F70: mul r2.z, r0.z, l(0.425000)
 116  0x00000F8C: ld_aoffimmi_indexable(2,0,0)(texture2d)(uint,uint,uint,uint) r2.w, r3.xyww, t0.yzwx
 117  0x00000FB4: and r5.x, r2.w, l(255)
 118  0x00000FD0: utof r5.x, r5.x
 119  0x00000FE4: ubfe r8.xw, l(8, 0, 0, 8), l(8, 0, 0, 16), r2.wwww
 120  0x00001020: ushr r2.w, r2.w, l(24)
 121  0x0000103C: utof r2.w, r2.w
 122  0x00001050: mul r15.w, r2.w, l(0.003922)
 123  0x0000106C: utof r5.yz, r8.xxwx
 124  0x00001080: mad r15.xyz, r5.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
 125  0x000010BC: mad r4.xyzw, r2.zzzz, r15.xyzw, r4.xyzw
 126  0x000010E0: mul r2.zw, r9.xxxy, r12.wwww
 127  0x000010FC: mad r0.y, r12.x, r0.y, r2.z
 128  0x00001120: mul r2.z, r0.y, l(0.425000)
 129  0x0000113C: ld_aoffimmi_indexable(0,2,0)(texture2d)(uint,uint,uint,uint) r5.x, r3.xyww, t0.xyzw
 130  0x00001164: ld_aoffimmi_indexable(2,2,0)(texture2d)(uint,uint,uint,uint) r3.x, r3.xyzw, t0.xyzw
 131  0x0000118C: and r3.y, r5.x, l(255)
 132  0x000011A8: utof r9.x, r3.y
 133  0x000011BC: ubfe r3.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r5.xxxx
 134  0x000011F8: ushr r3.w, r5.x, l(24)
 135  0x00001214: utof r3.w, r3.w
 136  0x00001228: mul r5.w, r3.w, l(0.003922)
 137  0x00001244: utof r9.yz, r3.yyzy
 138  0x00001258: mad r5.xyz, r9.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
 139  0x00001294: mad r4.xyzw, r2.zzzz, r5.xyzw, r4.xyzw
 140  0x000012B8: and r3.yzw, r7.xxyz, l(0, 3, 3, 3)
 141  0x000012E0: ubfe r5.xyz, l(2, 2, 2, 0), l(6, 2, 4, 0), r7.zzxz
 142  0x0000131C: utof r5.xyz, r5.xyzx
 143  0x00001330: utof r3.yzw, r3.yyzw
 144  0x00001344: mul r3.yw, r3.yyyw, l(0.000000, 0.333333, 0.000000, 0.333333)
 145  0x0000136C: mul r7.z, r11.y, r3.z
 146  0x00001388: mad r2.z, r12.y, r3.y, r2.w
 147  0x000013AC: mul r2.w, r2.z, l(0.425000)
 148  0x000013C8: and r3.z, r3.x, l(255)
 149  0x000013E4: utof r9.x, r3.z
 150  0x000013F8: ubfe r8.xw, l(8, 0, 0, 8), l(8, 0, 0, 16), r3.xxxx
 151  0x00001434: ushr r3.x, r3.x, l(24)
 152  0x00001450: utof r3.x, r3.x
 153  0x00001464: mul r18.w, r3.x, l(0.003922)
 154  0x00001480: utof r9.yz, r8.xxwx
 155  0x00001494: mad r18.xyz, r9.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
 156  0x000014D0: mad r4.xyzw, r2.wwww, r18.xyzw, r4.xyzw
 157  0x000014F4: add r2.w, r12.x, cb0[5].w
 158  0x00001514: add r2.w, r12.y, r2.w
 159  0x00001530: add r2.w, r12.z, r2.w
 160  0x0000154C: add r2.w, r12.w, r2.w
 161  0x00001568: mad r0.x, r0.x, l(0.425000), r2.w
 162  0x0000158C: mad r0.x, r0.z, l(0.425000), r0.x
 163  0x000015B0: mad r0.x, r0.y, l(0.425000), r0.x
 164  0x000015D4: mad r0.x, r2.z, l(0.425000), r0.x
 165  0x000015F8: div r4.xyzw, r4.xyzw, r0.xxxx
 166  0x00001614: dp3 r0.x, r4.xyzx, r4.xyzx
 167  0x00001630: rsq r0.x, r0.x
 168  0x00001644: mul r0.xyz, r0.xxxx, r4.xyzx
 169  0x00001660: mul_sat r2.z, r4.w, l(1.500000)
 170  0x0000167C: mad r2.z, r2.z, l(255.000000), l(0.500000)
 171  0x000016A0: ftou r2.z, r2.z
 172  0x000016B4: mad_sat r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 173  0x000016F0: mad r0.xyz, r0.xyzx, l(255.000000, 255.000000, 255.000000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 174  0x0000172C: ftou r0.xyz, r0.xyzx
 175  0x00001740: imad r0.x, r0.y, l(256), r0.x
 176  0x00001764: imad r0.x, r0.z, l(0x00010000), r0.x
 177  0x00001788: imad r0.x, r2.z, l(0x01000000), r0.x
 178  0x000017AC: store_uav_typed u0.xyzw, r1.yzzz, r0.xxxx
 179  0x000017C8: and r0.x, r1.w, l(255)
 180  0x000017E4: utof r0.x, r0.x
 181  0x000017F8: ubfe r2.zw, l(0, 0, 8, 8), l(0, 0, 8, 16), r1.wwww
 182  0x00001834: ushr r1.w, r1.w, l(24)
 183  0x00001850: utof r1.w, r1.w
 184  0x00001864: mul r4.w, r1.w, l(0.003922)
 185  0x00001880: utof r0.yz, r2.zzwz
 186  0x00001894: mad r4.xyz, r0.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
 187  0x000018D0: mul r0.xy, r5.xyxx, l(0.333333, 0.333333, 0.000000, 0.000000)
 188  0x000018F8: mul r10.y, r0.x, r5.z
 189  0x00001914: mul r7.w, r2.y, r3.y
 190  0x00001930: mul r0.x, r2.x, l(0.333333)
 191  0x0000194C: mov r7.x, r8.y
 192  0x00001960: mov r7.y, l(0.333333)
 193  0x00001974: mul r2.xyzw, r7.xyzw, r10.xyzw
 194  0x00001990: dp4 r0.z, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
 195  0x000019B8: add_sat r0.z, -r0.z, l(1.500000)
 196  0x000019D8: mad r2.xyzw, r0.zzzz, l(0.333333, 0.333333, 0.333333, 0.333333), r2.xyzw
 197  0x00001A08: min r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
 198  0x00001A30: mul r5.xyzw, r13.xyzw, r2.xxxx
 199  0x00001A4C: mad r5.xyzw, r14.xyzw, cb0[5].wwww, r5.xyzw
 200  0x00001A74: mad r4.xyzw, r2.yyyy, r4.xyzw, r5.xyzw
 201  0x00001A98: mad r4.xyzw, r2.zzzz, r15.xyzw, r4.xyzw
 202  0x00001ABC: mad r4.xyzw, r2.wwww, r18.xyzw, r4.xyzw
 203  0x00001AE0: mul r3.xy, r11.zwzz, r2.zzzz
 204  0x00001AFC: mad r0.z, r2.x, r8.z, r3.x
 205  0x00001B20: mad r0.y, r2.y, r0.y, r3.y
 206  0x00001B44: mul r1.w, r0.z, l(0.425000)
 207  0x00001B60: mad r4.xyzw, r1.wwww, r16.xyzw, r4.xyzw
 208  0x00001B84: mul r1.w, r0.y, l(0.425000)
 209  0x00001BA0: ld_aoffimmi_indexable(2,0,0)(texture2d)(uint,uint,uint,uint) r3.x, r6.xyww, t0.xyzw
 210  0x00001BC8: ld_aoffimmi_indexable(2,2,0)(texture2d)(uint,uint,uint,uint) r3.y, r6.xyzw, t0.yxzw
 211  0x00001BF0: and r3.z, r3.x, l(255)
 212  0x00001C0C: utof r5.x, r3.z
 213  0x00001C20: ubfe r6.xy, l(8, 8, 0, 0), l(8, 16, 0, 0), r3.xxxx
 214  0x00001C5C: ushr r3.x, r3.x, l(24)
 215  0x00001C78: utof r3.x, r3.x
 216  0x00001C8C: mul r7.w, r3.x, l(0.003922)
 217  0x00001CA8: utof r5.yz, r6.xxyx
 218  0x00001CBC: mad r7.xyz, r5.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
 219  0x00001CF8: mad r4.xyzw, r1.wwww, r7.xyzw, r4.xyzw
 220  0x00001D1C: mul r0.xw, r0.xxxw, r2.wwwx
 221  0x00001D38: mad r0.w, r2.w, r9.w, r0.w
 222  0x00001D5C: mul r1.w, r0.w, l(0.425000)
 223  0x00001D78: mad r4.xyzw, r1.wwww, r17.xyzw, r4.xyzw
 224  0x00001D9C: mad r0.x, r2.y, r3.w, r0.x
 225  0x00001DC0: mul r1.w, r0.x, l(0.425000)
 226  0x00001DDC: and r3.x, r3.y, l(255)
 227  0x00001DF8: utof r5.x, r3.x
 228  0x00001E0C: ubfe r3.xz, l(8, 0, 8, 0), l(8, 0, 16, 0), r3.yyyy
 229  0x00001E48: ushr r3.y, r3.y, l(24)
 230  0x00001E64: utof r3.y, r3.y
 231  0x00001E78: mul r6.w, r3.y, l(0.003922)
 232  0x00001E94: utof r5.yz, r3.xxzx
 233  0x00001EA8: mad r6.xyz, r5.xyzx, l(0.007843, 0.007843, 0.007843, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
 234  0x00001EE4: mad r3.xyzw, r1.wwww, r6.xyzw, r4.xyzw
 235  0x00001F08: add r1.w, r2.x, cb0[5].w
 236  0x00001F28: add r1.w, r2.y, r1.w
 237  0x00001F44: add r1.w, r2.z, r1.w
 238  0x00001F60: add r1.w, r2.w, r1.w
 239  0x00001F7C: mad r0.z, r0.z, l(0.425000), r1.w
 240  0x00001FA0: mad r0.y, r0.y, l(0.425000), r0.z
 241  0x00001FC4: mad r0.y, r0.w, l(0.425000), r0.y
 242  0x00001FE8: mad r0.x, r0.x, l(0.425000), r0.y
 243  0x0000200C: div r0.xyzw, r3.xyzw, r0.xxxx
 244  0x00002028: dp3 r1.w, r0.xyzx, r0.xyzx
 245  0x00002044: rsq r1.w, r1.w
 246  0x00002058: mul r0.xyz, r0.xyzx, r1.wwww
 247  0x00002074: mul_sat r0.w, r0.w, l(1.500000)
 248  0x00002090: mad r0.w, r0.w, l(255.000000), l(0.500000)
 249  0x000020B4: mad_sat r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 250  0x000020F0: mad r0.xyz, r0.xyzx, l(255.000000, 255.000000, 255.000000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 251  0x0000212C: ftou r0.xyzw, r0.xyzw
 252  0x00002140: imad r0.x, r0.y, l(256), r0.x
 253  0x00002164: imad r0.x, r0.z, l(0x00010000), r0.x
 254  0x00002188: imad r0.x, r0.w, l(0x01000000), r0.x
 255  0x000021AC: imad r1.x, vThreadID.x, l(2), l(1)
 256  0x000021CC: store_uav_typed u0.xyzw, r1.xzzz, r0.xxxx
 257  0x000021E8: ret 
// Approximately 258 instruction slots used
